// Starter snippet packs for TextBlitz
// Curated collections designed for common workflows

import { SnippetPack } from './types';

// Note: Additional packs are planned for v1.1.0+ as community-driven content

export const STARTER_PACKS: SnippetPack[] = [
  // 1. Essential Communication
  {
    id: 'essential-communication',
    name: '💬 Essential Communication',
    description: 'Professional and personal communication templates that work everywhere',
    icon: '💬',
    author: 'TextBlitz',
    version: '1.0.0',
    tags: ['communication', 'professional', 'personal', 'beginner'],
    snippets: [
      {
        id: 'comm-thanks',
        label: 'Thank You',
        trigger: 'thx',
        expansion: 'Thank you for your help!',
        caseSensitive: false,
        enabled: true,
        triggerMode: 'word',
        createdAt: Date.now(),
        usageCount: 0,
        type: 'static',
      },
      {
        id: 'comm-followup',
        label: 'Follow Up',
        trigger: 'fup',
        expansion: 'Hi {formtext: name=Name; default=there},\n\nJust following up on {formtext: name=Subject; required=true}.\n\nLet me know if you need any additional information.\n\nBest regards',
        caseSensitive: false,
        enabled: true,
        triggerMode: 'word',
        createdAt: Date.now(),
        usageCount: 0,
        type: 'static',
      },
      {
        id: 'comm-meeting',
        label: 'Meeting Confirmation',
        trigger: 'meetconfirm',
        expansion: 'Confirmed: Meeting on {date:MMMM Do} at {time:h:mm A}.\n\nLocation/Link: {formtext: name=Location}\n\nAgenda: {formtext: name=Agenda}',
        caseSensitive: false,
        enabled: true,
        triggerMode: 'word',
        createdAt: Date.now(),
        usageCount: 0,
        type: 'static',
      },
      {
        id: 'comm-ooo',
        label: 'Out of Office',
        trigger: 'ooo',
        expansion: 'I\'m currently out of office and will return on {formdate: label=Return Date}.\n\nFor urgent matters, please contact {formtext: name=Backup Contact}.\n\nI\'ll respond to your message when I return.',
        caseSensitive: false,
        enabled: true,
        triggerMode: 'word',
        createdAt: Date.now(),
        usageCount: 0,
        type: 'static',
      },
      {
        id: 'comm-apology',
        label: 'Professional Apology',
        trigger: 'apologize',
        expansion: 'I apologize for {formtext: name=Issue}. {formparagraph: name=Explanation}\n\nTo resolve this: {formparagraph: name=Solution}\n\nThank you for your patience.',
        caseSensitive: false,
        enabled: true,
        triggerMode: 'word',
        createdAt: Date.now(),
        usageCount: 0,
        type: 'static',
      },
    ],
    createdAt: Date.now(),
    updatedAt: Date.now(),
  },

  // 2. Developer Essentials
  {
    id: 'developer-essentials',
    name: '🧑‍💻 Developer Essentials',
    description: 'Code snippets, git messages, debugging templates, and common dev workflows',
    icon: '🧑‍💻',
    author: 'TextBlitz',
    version: '1.0.0',
    tags: ['developer', 'programming', 'git', 'code'],
    compatibleWith: ['customer-service-pro'], // Good for freelance devs
    snippets: [
      {
        id: 'dev-arrow',
        label: 'Arrow Function',
        trigger: 'arrow',
        expansion: '() => {}',
        caseSensitive: false,
        enabled: true,
        triggerMode: 'word',
        createdAt: Date.now(),
        usageCount: 0,
        type: 'static',
      },
      {
        id: 'dev-console',
        label: 'Console Log',
        trigger: 'clog',
        expansion: 'console.log(\'{cursor}\');',
        caseSensitive: false,
        enabled: true,
        triggerMode: 'word',
        createdAt: Date.now(),
        usageCount: 0,
        type: 'static',
      },
      {
        id: 'dev-gitfix',
        label: 'Git Fix Commit',
        trigger: 'gitfix',
        expansion: 'fix: {formtext: name=Description; required=true}',
        caseSensitive: false,
        enabled: true,
        triggerMode: 'word',
        createdAt: Date.now(),
        usageCount: 0,
        type: 'static',
      },
      {
        id: 'dev-gitfeat',
        label: 'Git Feature Commit',
        trigger: 'gitfeat',
        expansion: 'feat: {formtext: name=Description; required=true}',
        caseSensitive: false,
        enabled: true,
        triggerMode: 'word',
        createdAt: Date.now(),
        usageCount: 0,
        type: 'static',
      },
      {
        id: 'dev-todo',
        label: 'TODO Comment',
        trigger: 'todoc',
        expansion: '// TODO: {cursor}',
        caseSensitive: false,
        enabled: true,
        triggerMode: 'word',
        createdAt: Date.now(),
        usageCount: 0,
        type: 'static',
      },
      {
        id: 'dev-fixme',
        label: 'FIXME Comment',
        trigger: 'fixmec',
        expansion: '// FIXME: {cursor}',
        caseSensitive: false,
        enabled: true,
        triggerMode: 'word',
        createdAt: Date.now(),
        usageCount: 0,
        type: 'static',
      },
      {
        id: 'dev-async',
        label: 'Async Function',
        trigger: 'asyncfn',
        expansion: 'async () => {\n  {cursor}\n}',
        caseSensitive: false,
        enabled: true,
        triggerMode: 'word',
        createdAt: Date.now(),
        usageCount: 0,
        type: 'static',
      },
      {
        id: 'dev-trycatch',
        label: 'Try Catch Block',
        trigger: 'tryc',
        expansion: 'try {\n  {cursor}\n} catch (error) {\n  console.error(error);\n}',
        caseSensitive: false,
        enabled: true,
        triggerMode: 'word',
        createdAt: Date.now(),
        usageCount: 0,
        type: 'static',
      },
      {
        id: 'dev-pr',
        label: 'Pull Request Description',
        trigger: 'prdesc',
        expansion: '## Summary\n{formparagraph: name=What changed?}\n\n## Why\n{formparagraph: name=Why this change?}\n\n## Testing\n- [ ] {formtext: name=Test 1}\n- [ ] {formtext: name=Test 2}\n\n## Screenshots\n{formtext: name=Screenshot URL (optional)}',
        caseSensitive: false,
        enabled: true,
        triggerMode: 'word',
        createdAt: Date.now(),
        usageCount: 0,
        type: 'static',
      },
    ],
    folders: [
      {
        id: 'dev-git',
        name: 'Git',
        icon: '🔧',
        order: 0,
      },
      {
        id: 'dev-code',
        name: 'Code Snippets',
        icon: '💻',
        order: 1,
      },
    ],
    createdAt: Date.now(),
    updatedAt: Date.now(),
  },

  // 3. Customer Service Pro
  {
    id: 'customer-service-pro',
    name: '📧 Customer Service Pro',
    description: 'Empathy-driven responses, de-escalation, and professional customer support templates',
    icon: '📧',
    author: 'TextBlitz',
    version: '1.0.0',
    tags: ['customer-service', 'support', 'empathy', 'professional'],
    snippets: [
      {
        id: 'cs-empathy',
        label: 'Empathy Opening',
        trigger: 'csempathy',
        expansion: 'I understand how {formmenu: label=Emotion; options=frustrating,disappointing,concerning,inconvenient} this must be for you.',
        caseSensitive: false,
        enabled: true,
        triggerMode: 'word',
        createdAt: Date.now(),
        usageCount: 0,
        type: 'static',
      },
      {
        id: 'cs-investigating',
        label: 'Investigating Issue',
        trigger: 'csinvest',
        expansion: 'Thank you for bringing this to our attention. I\'m looking into {formtext: name=Issue} right now and will have an update for you within {formtext: name=Timeframe; default=24 hours}.',
        caseSensitive: false,
        enabled: true,
        triggerMode: 'word',
        createdAt: Date.now(),
        usageCount: 0,
        type: 'static',
      },
      {
        id: 'cs-escalate',
        label: 'Escalation',
        trigger: 'csescalate',
        expansion: 'I want to make sure you receive the best possible resolution. I\'m escalating this to {formtext: name=Team/Person} who specializes in {formtext: name=Issue Type}. They\'ll reach out within {formtext: name=Timeframe; default=24 hours}.',
        caseSensitive: false,
        enabled: true,
        triggerMode: 'word',
        createdAt: Date.now(),
        usageCount: 0,
        type: 'static',
      },
      {
        id: 'cs-refund',
        label: 'Refund Process',
        trigger: 'csrefund',
        expansion: 'I\'ve processed a {formmenu: label=Type; options=full refund,partial refund,store credit} of {formtext: name=Amount}. You should see this reflected in your account within {formtext: name=Timeframe; default=5-7 business days}.',
        caseSensitive: false,
        enabled: true,
        triggerMode: 'word',
        createdAt: Date.now(),
        usageCount: 0,
        type: 'static',
      },
      {
        id: 'cs-followup',
        label: 'Resolution Follow-up',
        trigger: 'csfollowup',
        expansion: 'I wanted to follow up and make sure {formtext: name=Issue} has been resolved to your satisfaction. Is there anything else I can help you with?',
        caseSensitive: false,
        enabled: true,
        triggerMode: 'word',
        createdAt: Date.now(),
        usageCount: 0,
        type: 'static',
      },
      {
        id: 'cs-delay',
        label: 'Delay Explanation',
        trigger: 'csdelay',
        expansion: 'I apologize for the delay with {formtext: name=Issue}. {formparagraph: name=Explanation}\n\nExpected resolution: {formtext: name=Timeline}\n\nI\'ll keep you updated on progress.',
        caseSensitive: false,
        enabled: true,
        triggerMode: 'word',
        createdAt: Date.now(),
        usageCount: 0,
        type: 'static',
      },
    ],
    createdAt: Date.now(),
    updatedAt: Date.now(),
  },
];

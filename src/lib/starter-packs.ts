// Starter snippet packs for TextBlitz
// Curated collections designed for common workflows

import { SnippetPack } from './types';

// Note: Additional packs are planned for v1.1.0+ as community-driven content

export const STARTER_PACKS: SnippetPack[] = [
  // 1. Essential Communication
  {
    id: 'essential-communication',
    name: '💬 Essential Communication',
    description: 'Professional and personal communication templates that work everywhere',
    icon: '💬',
    author: 'TextBlitz',
    version: '1.0.0',
    tags: ['communication', 'professional', 'personal', 'beginner'],
    snippets: [
      {
        id: 'comm-thanks',
        label: 'Thank You',
        trigger: 'thx',
        expansion: 'Thank you for your help!',
        caseSensitive: false,
        enabled: true,
        triggerMode: 'word',
        createdAt: Date.now(),
        usageCount: 0,
        type: 'static',
      },
      {
        id: 'comm-followup',
        label: 'Follow Up',
        trigger: 'fup',
        expansion: 'Hi {formtext: name=Name; default=there},\n\nJust following up on {formtext: name=Subject; required=true}.\n\nLet me know if you need any additional information.\n\nBest regards',
        caseSensitive: false,
        enabled: true,
        triggerMode: 'word',
        createdAt: Date.now(),
        usageCount: 0,
        type: 'static',
      },
      {
        id: 'comm-meeting',
        label: 'Meeting Confirmation',
        trigger: 'meetconfirm',
        expansion: 'Confirmed: Meeting on {date:MMMM Do} at {time:h:mm A}.\n\nLocation/Link: {formtext: name=Location}\n\nAgenda: {formtext: name=Agenda}',
        caseSensitive: false,
        enabled: true,
        triggerMode: 'word',
        createdAt: Date.now(),
        usageCount: 0,
        type: 'static',
      },
      {
        id: 'comm-ooo',
        label: 'Out of Office',
        trigger: 'ooo',
        expansion: 'I\'m currently out of office and will return on {formdate: label=Return Date}.\n\nFor urgent matters, please contact {formtext: name=Backup Contact}.\n\nI\'ll respond to your message when I return.',
        caseSensitive: false,
        enabled: true,
        triggerMode: 'word',
        createdAt: Date.now(),
        usageCount: 0,
        type: 'static',
      },
      {
        id: 'comm-apology',
        label: 'Professional Apology',
        trigger: 'apologize',
        expansion: 'I apologize for {formtext: name=Issue}. {formparagraph: name=Explanation}\n\nTo resolve this: {formparagraph: name=Solution}\n\nThank you for your patience.',
        caseSensitive: false,
        enabled: true,
        triggerMode: 'word',
        createdAt: Date.now(),
        usageCount: 0,
        type: 'static',
      },
    ],
    createdAt: Date.now(),
    updatedAt: Date.now(),
  },

  // 2. Developer Essentials
  {
    id: 'developer-essentials',
    name: '🧑‍💻 Developer Essentials',
    description: 'Code snippets, git messages, debugging templates, and common dev workflows',
    icon: '🧑‍💻',
    author: 'TextBlitz',
    version: '1.0.0',
    tags: ['developer', 'programming', 'git', 'code'],
    compatibleWith: ['customer-service-pro'], // Good for freelance devs
    snippets: [
      {
        id: 'dev-arrow',
        label: 'Arrow Function',
        trigger: 'arrow',
        expansion: '() => {}',
        caseSensitive: false,
        enabled: true,
        triggerMode: 'word',
        createdAt: Date.now(),
        usageCount: 0,
        type: 'static',
      },
      {
        id: 'dev-console',
        label: 'Console Log',
        trigger: 'clog',
        expansion: 'console.log(\'{cursor}\');',
        caseSensitive: false,
        enabled: true,
        triggerMode: 'word',
        createdAt: Date.now(),
        usageCount: 0,
        type: 'static',
      },
      {
        id: 'dev-gitfix',
        label: 'Git Fix Commit',
        trigger: 'gitfix',
        expansion: 'fix: {formtext: name=Description; required=true}',
        caseSensitive: false,
        enabled: true,
        triggerMode: 'word',
        createdAt: Date.now(),
        usageCount: 0,
        type: 'static',
      },
      {
        id: 'dev-gitfeat',
        label: 'Git Feature Commit',
        trigger: 'gitfeat',
        expansion: 'feat: {formtext: name=Description; required=true}',
        caseSensitive: false,
        enabled: true,
        triggerMode: 'word',
        createdAt: Date.now(),
        usageCount: 0,
        type: 'static',
      },
      {
        id: 'dev-todo',
        label: 'TODO Comment',
        trigger: 'todoc',
        expansion: '// TODO: {cursor}',
        caseSensitive: false,
        enabled: true,
        triggerMode: 'word',
        createdAt: Date.now(),
        usageCount: 0,
        type: 'static',
      },
      {
        id: 'dev-fixme',
        label: 'FIXME Comment',
        trigger: 'fixmec',
        expansion: '// FIXME: {cursor}',
        caseSensitive: false,
        enabled: true,
        triggerMode: 'word',
        createdAt: Date.now(),
        usageCount: 0,
        type: 'static',
      },
      {
        id: 'dev-async',
        label: 'Async Function',
        trigger: 'asyncfn',
        expansion: 'async () => {\n  {cursor}\n}',
        caseSensitive: false,
        enabled: true,
        triggerMode: 'word',
        createdAt: Date.now(),
        usageCount: 0,
        type: 'static',
      },
      {
        id: 'dev-trycatch',
        label: 'Try Catch Block',
        trigger: 'tryc',
        expansion: 'try {\n  {cursor}\n} catch (error) {\n  console.error(error);\n}',
        caseSensitive: false,
        enabled: true,
        triggerMode: 'word',
        createdAt: Date.now(),
        usageCount: 0,
        type: 'static',
      },
      {
        id: 'dev-pr',
        label: 'Pull Request Description',
        trigger: 'prdesc',
        expansion: '## Summary\n{formparagraph: name=What changed?}\n\n## Why\n{formparagraph: name=Why this change?}\n\n## Testing\n- [ ] {formtext: name=Test 1}\n- [ ] {formtext: name=Test 2}\n\n## Screenshots\n{formtext: name=Screenshot URL (optional)}',
        caseSensitive: false,
        enabled: true,
        triggerMode: 'word',
        createdAt: Date.now(),
        usageCount: 0,
        type: 'static',
      },
    ],
    folders: [
      {
        id: 'dev-git',
        name: 'Git',
        icon: '🔧',
        order: 0,
      },
      {
        id: 'dev-code',
        name: 'Code Snippets',
        icon: '💻',
        order: 1,
      },
    ],
    createdAt: Date.now(),
    updatedAt: Date.now(),
  },

  // 3. Customer Service Pro
  {
    id: 'customer-service-pro',
    name: '📧 Customer Service Pro',
    description: 'Empathy-driven responses, de-escalation, and professional customer support templates',
    icon: '📧',
    author: 'TextBlitz',
    version: '1.0.0',
    tags: ['customer-service', 'support', 'empathy', 'professional'],
    snippets: [
      {
        id: 'cs-empathy',
        label: 'Empathy Opening',
        trigger: 'csempathy',
        expansion: 'I understand how {formmenu: label=Emotion; options=frustrating,disappointing,concerning,inconvenient} this must be for you.',
        caseSensitive: false,
        enabled: true,
        triggerMode: 'word',
        createdAt: Date.now(),
        usageCount: 0,
        type: 'static',
      },
      {
        id: 'cs-investigating',
        label: 'Investigating Issue',
        trigger: 'csinvest',
        expansion: 'Thank you for bringing this to our attention. I\'m looking into {formtext: name=Issue} right now and will have an update for you within {formtext: name=Timeframe; default=24 hours}.',
        caseSensitive: false,
        enabled: true,
        triggerMode: 'word',
        createdAt: Date.now(),
        usageCount: 0,
        type: 'static',
      },
      {
        id: 'cs-escalate',
        label: 'Escalation',
        trigger: 'csescalate',
        expansion: 'I want to make sure you receive the best possible resolution. I\'m escalating this to {formtext: name=Team/Person} who specializes in {formtext: name=Issue Type}. They\'ll reach out within {formtext: name=Timeframe; default=24 hours}.',
        caseSensitive: false,
        enabled: true,
        triggerMode: 'word',
        createdAt: Date.now(),
        usageCount: 0,
        type: 'static',
      },
      {
        id: 'cs-refund',
        label: 'Refund Process',
        trigger: 'csrefund',
        expansion: 'I\'ve processed a {formmenu: label=Type; options=full refund,partial refund,store credit} of {formtext: name=Amount}. You should see this reflected in your account within {formtext: name=Timeframe; default=5-7 business days}.',
        caseSensitive: false,
        enabled: true,
        triggerMode: 'word',
        createdAt: Date.now(),
        usageCount: 0,
        type: 'static',
      },
      {
        id: 'cs-followup',
        label: 'Resolution Follow-up',
        trigger: 'csfollowup',
        expansion: 'I wanted to follow up and make sure {formtext: name=Issue} has been resolved to your satisfaction. Is there anything else I can help you with?',
        caseSensitive: false,
        enabled: true,
        triggerMode: 'word',
        createdAt: Date.now(),
        usageCount: 0,
        type: 'static',
      },
      {
        id: 'cs-delay',
        label: 'Delay Explanation',
        trigger: 'csdelay',
        expansion: 'I apologize for the delay with {formtext: name=Issue}. {formparagraph: name=Explanation}\n\nExpected resolution: {formtext: name=Timeline}\n\nI\'ll keep you updated on progress.',
        caseSensitive: false,
        enabled: true,
        triggerMode: 'word',
        createdAt: Date.now(),
        usageCount: 0,
        type: 'static',
      },
    ],
    createdAt: Date.now(),
    updatedAt: Date.now(),
  },

  // 4. Test & Development Pack
  {
    id: 'test-dev-pack',
    name: '🧪 Test & Development',
    description: 'Comprehensive test suite for all TextBlitz features: {date}, {time}, {clipboard}, {cursor}, {enter}, {tab}, {delay}, forms, and fixes',
    icon: '🧪',
    author: 'TextBlitz',
    version: '1.0.0',
    tags: ['testing', 'development', 'commands', 'forms'],
    snippets: [
      // Date/Time Commands
      { id: 'test-tdate', label: 'Test: Date default', trigger: 'tdate', expansion: '{date}', caseSensitive: false, enabled: true, triggerMode: 'word', createdAt: Date.now(), usageCount: 0, type: 'static' },
      { id: 'test-tdateus', label: 'Test: Date US format', trigger: 'tdateus', expansion: '{date:MM/DD/YYYY}', caseSensitive: false, enabled: true, triggerMode: 'word', createdAt: Date.now(), usageCount: 0, type: 'static' },
      { id: 'test-tdatelong', label: 'Test: Date long format', trigger: 'tdatelong', expansion: '{date:MMMM D, YYYY}', caseSensitive: false, enabled: true, triggerMode: 'word', createdAt: Date.now(), usageCount: 0, type: 'static' },
      { id: 'test-tdateord', label: 'Test: Date ordinal', trigger: 'tdateord', expansion: '{date:MMMM Do YYYY}', caseSensitive: false, enabled: true, triggerMode: 'word', createdAt: Date.now(), usageCount: 0, type: 'static' },
      { id: 'test-tdate3m', label: 'Test: Date +3 months', trigger: 't3months', expansion: '{date:MMMM Do YYYY shift +3M}', caseSensitive: false, enabled: true, triggerMode: 'word', createdAt: Date.now(), usageCount: 0, type: 'static' },
      { id: 'test-tdate1y', label: 'Test: Date -1 year', trigger: 't1year', expansion: '{date shift -1Y}', caseSensitive: false, enabled: true, triggerMode: 'word', createdAt: Date.now(), usageCount: 0, type: 'static' },
      { id: 'test-tdate7d', label: 'Test: Date +7 days', trigger: 't7days', expansion: '{date shift +7d}', caseSensitive: false, enabled: true, triggerMode: 'word', createdAt: Date.now(), usageCount: 0, type: 'static' },
      { id: 'test-ttime', label: 'Test: Time default', trigger: 'ttime', expansion: '{time}', caseSensitive: false, enabled: true, triggerMode: 'word', createdAt: Date.now(), usageCount: 0, type: 'static' },
      { id: 'test-ttime12', label: 'Test: Time 12h', trigger: 'ttime12', expansion: '{time:12h}', caseSensitive: false, enabled: true, triggerMode: 'word', createdAt: Date.now(), usageCount: 0, type: 'static' },

      // Clipboard & Cursor
      { id: 'test-tclip', label: 'Test: Clipboard', trigger: 'tclip', expansion: '{clipboard}', caseSensitive: false, enabled: true, triggerMode: 'word', createdAt: Date.now(), usageCount: 0, type: 'static' },
      { id: 'test-tsig', label: 'Test: Cursor positioning', trigger: 'tsig', expansion: 'Best,\n{cursor}\nSent {date}', caseSensitive: false, enabled: true, triggerMode: 'word', createdAt: Date.now(), usageCount: 0, type: 'static' },
      { id: 'test-cursor-basic', label: 'Test: {cursor} basic', trigger: 'tcursor1', expansion: 'Hello {cursor} world', caseSensitive: false, enabled: true, triggerMode: 'word', createdAt: Date.now(), usageCount: 0, type: 'static' },
      { id: 'test-cursor-quotes', label: 'Test: {cursor} in quotes', trigger: 'tcursor2', expansion: 'console.log(\'{cursor}\');', caseSensitive: false, enabled: true, triggerMode: 'word', createdAt: Date.now(), usageCount: 0, type: 'static' },
      { id: 'test-cursor-start', label: 'Test: {cursor} at start', trigger: 'tcursor3', expansion: '{cursor}Start here', caseSensitive: false, enabled: true, triggerMode: 'word', createdAt: Date.now(), usageCount: 0, type: 'static' },
      { id: 'test-cursor-end', label: 'Test: {cursor} at end', trigger: 'tcursor4', expansion: 'End here{cursor}', caseSensitive: false, enabled: true, triggerMode: 'word', createdAt: Date.now(), usageCount: 0, type: 'static' },

      // Keyboard Commands
      { id: 'test-tkeyboard', label: 'Test: Keyboard automation', trigger: 'tkeyboard', expansion: 'out {enter} {delay +0.3s} {tab} left {enter} {tab} money {enter}', caseSensitive: false, enabled: true, triggerMode: 'word', createdAt: Date.now(), usageCount: 0, type: 'static' },
      { id: 'test-enter-basic', label: 'Test: {enter} newlines', trigger: 'tenter1', expansion: 'Line 1{enter}Line 2{enter}Line 3', caseSensitive: false, enabled: true, triggerMode: 'word', createdAt: Date.now(), usageCount: 0, type: 'static' },
      { id: 'test-tab-basic', label: 'Test: {tab} navigation', trigger: 'ttab1', expansion: 'Field1{tab}Field2{tab}Field3', caseSensitive: false, enabled: true, triggerMode: 'word', createdAt: Date.now(), usageCount: 0, type: 'static' },
      { id: 'test-delay-short', label: 'Test: {delay} 0.5s', trigger: 'tdelay1', expansion: 'Fast{delay +0.5s}Slow', caseSensitive: false, enabled: true, triggerMode: 'word', createdAt: Date.now(), usageCount: 0, type: 'static' },
      { id: 'test-delay-ms', label: 'Test: {delay} milliseconds', trigger: 'tdelay2', expansion: 'Before{delay +500ms}After', caseSensitive: false, enabled: true, triggerMode: 'word', createdAt: Date.now(), usageCount: 0, type: 'static' },
      { id: 'test-delaylong', label: 'Test: {delay} 3 seconds', trigger: 'tdelay3s', expansion: 'Before delay{delay +3s}After 3 seconds', caseSensitive: false, enabled: true, triggerMode: 'word', createdAt: Date.now(), usageCount: 0, type: 'static' },

      // Form Fields
      { id: 'test-formtext', label: 'Test: Form text input', trigger: 'tformtext', expansion: 'Hello {formtext: label=Name}, how are you today?', caseSensitive: false, enabled: true, triggerMode: 'word', createdAt: Date.now(), usageCount: 0, type: 'static' },
      { id: 'test-formmenu', label: 'Test: Form dropdown', trigger: 'tformmenu', expansion: 'Status: {formmenu: label=Status; options=Active,Pending,Closed}', caseSensitive: false, enabled: true, triggerMode: 'word', createdAt: Date.now(), usageCount: 0, type: 'static' },
      { id: 'test-formdate', label: 'Test: Form date picker', trigger: 'tformdate', expansion: 'Due date: {formdate: label=Due Date}', caseSensitive: false, enabled: true, triggerMode: 'word', createdAt: Date.now(), usageCount: 0, type: 'static' },
      { id: 'test-formtoggle', label: 'Test: Form checkbox', trigger: 'tformtoggle', expansion: 'Include signature: {formtoggle: label=Include Signature}', caseSensitive: false, enabled: true, triggerMode: 'word', createdAt: Date.now(), usageCount: 0, type: 'static' },
      { id: 'test-formpara', label: 'Test: Form paragraph', trigger: 'tformpara', expansion: 'Notes:\n{formparagraph: label=Notes}', caseSensitive: false, enabled: true, triggerMode: 'word', createdAt: Date.now(), usageCount: 0, type: 'static' },
      { id: 'test-formmulti', label: 'Test: Multiple forms', trigger: 'tformmulti', expansion: 'Customer: {formtext: label=Customer Name}\nStatus: {formmenu: label=Status; options=New,In Progress,Resolved}\nDue: {formdate: label=Due Date}\nNotes: {formparagraph: label=Notes}', caseSensitive: false, enabled: true, triggerMode: 'word', createdAt: Date.now(), usageCount: 0, type: 'static' },
      { id: 'test-formfull', label: 'Test: Full form automation', trigger: 'tformfull', expansion: 'out {enter} {delay +0.3s} {tab} left {enter} {tab} money {enter} {tab} OUTBOUND', caseSensitive: false, enabled: true, triggerMode: 'word', createdAt: Date.now(), usageCount: 0, type: 'static' },

      // Complex Combinations
      { id: 'test-reassess', label: 'Test: Clipboard + Date math', trigger: 'treassess', expansion: '{clipboard} REASSESS IN 3 MONTHS - NEXT POSSIBLE ASSESSMENT DATE {date:MMMM Do YYYY shift +3M}', caseSensitive: false, enabled: true, triggerMode: 'word', createdAt: Date.now(), usageCount: 0, type: 'static' },
      { id: 'test-combo', label: 'Test: Complex combo', trigger: 'tcombo', expansion: 'Hi {clipboard},{cursor}\n\nFollow up on {date:MMMM Do YYYY shift +7d}{tab}{tab}', caseSensitive: false, enabled: true, triggerMode: 'word', createdAt: Date.now(), usageCount: 0, type: 'static' },
      { id: 'test-cursor-date', label: 'Test: {cursor} + {date}', trigger: 'tcursordate', expansion: 'Best regards,\n{cursor}\nSent on {date}', caseSensitive: false, enabled: true, triggerMode: 'word', createdAt: Date.now(), usageCount: 0, type: 'static' },
      { id: 'test-cursor-clipboard', label: 'Test: {cursor} + {clipboard}', trigger: 'tcursorclip', expansion: 'Pasted: {clipboard}\nYour input: {cursor}', caseSensitive: false, enabled: true, triggerMode: 'word', createdAt: Date.now(), usageCount: 0, type: 'static' },
      { id: 'test-enter-tab-combo', label: 'Test: {enter} + {tab}', trigger: 'tentertab', expansion: 'Username{tab}Password{enter}Submit', caseSensitive: false, enabled: true, triggerMode: 'word', createdAt: Date.now(), usageCount: 0, type: 'static' },
      { id: 'test-all-commands', label: 'Test: All commands', trigger: 'tallcmds', expansion: 'Name: {cursor}{tab}Date: {date}{enter}Time: {time}{delay +1s}Done!', caseSensitive: false, enabled: true, triggerMode: 'word', createdAt: Date.now(), usageCount: 0, type: 'static' },
      { id: 'test-function-cursor', label: 'Test: Function template', trigger: 'tfunc', expansion: 'function {cursor}() {\n  \n}', caseSensitive: false, enabled: true, triggerMode: 'word', createdAt: Date.now(), usageCount: 0, type: 'static' },
      { id: 'test-email-cursor', label: 'Test: Email signature', trigger: 'temail', expansion: 'Hi,\n\n{cursor}\n\nBest regards,\nYour Name\n{date}', caseSensitive: false, enabled: true, triggerMode: 'word', createdAt: Date.now(), usageCount: 0, type: 'static' },

      // Regression Tests (previously broken features that were fixed)
      { id: 'test-cursor-delay-fix', label: '⭐ FIX TEST: {cursor} + {delay}', trigger: 'tcursordelay', expansion: 'Start{cursor} Middle{delay +1s} End', caseSensitive: false, enabled: true, triggerMode: 'word', createdAt: Date.now(), usageCount: 0, type: 'static' },
      { id: 'test-cursor-tab-fix', label: '⭐ FIX TEST: {cursor} + {tab}', trigger: 'tcursortab', expansion: 'Field1:{cursor}{tab}Field2', caseSensitive: false, enabled: true, triggerMode: 'word', createdAt: Date.now(), usageCount: 0, type: 'static' },
      { id: 'test-consecutive-commands', label: '⭐ FIX TEST: Consecutive commands', trigger: 'tconsec', expansion: 'A{delay +0.5s}{enter}B', caseSensitive: false, enabled: true, triggerMode: 'word', createdAt: Date.now(), usageCount: 0, type: 'static' },
    ],
    createdAt: Date.now(),
    updatedAt: Date.now(),
  },
];

class o{constructor(){this.children=new Map,this.snippet=null,this.isEndOfWord=!1}}class h{constructor(){this.root=new o}insert(e){if(!e.enabled)return;const n=e.trigger.toLowerCase();let t=this.root;for(const s of n){const r=s.toLowerCase();t.children.has(r)||t.children.set(r,new o),t=t.children.get(r)}t.isEndOfWord=!0,t.snippet=e}search(e){const n=e.toLowerCase();let t=this.root;for(const s of n){const r=s.toLowerCase();if(!t.children.has(r))return null;t=t.children.get(r)}return t.isEndOfWord?t.snippet:null}findMatch(e){if(e.length===0)return null;let n=null;for(let t=e.length;t>0;t--){const s=e.substring(e.length-t),r=this.search(s);r&&(!n||t>n.matchLength)&&(n={snippet:r,matchLength:t})}return n}rebuild(e){this.root=new o,Object.values(e).forEach(n=>this.insert(n))}clear(){this.root=new o}}export{h as SnippetTrie};

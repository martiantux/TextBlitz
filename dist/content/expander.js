(function(){"use strict";const b={enabled:!0,delimiter:" ",expandOnDelimiter:!0,caseSensitive:!1,debugMode:!1,darkMode:"system",customFolders:[],llmKeys:{},llmDefaultProvider:"groq",llmTimeout:5e3,llmMaxTokens:100,llmSystemPrompt:"You are a text completion assistant. Output clean, paste-ready text with no quotes, markdown formatting, or explanations. Generate natural variations of the requested content. Keep responses under 50 words unless explicitly asked for more. Never ask questions back or include placeholders like [brackets]. Output only the exact text the user needs.",llmUsageAlert:80,llmModels:{groq:"llama-3.3-70b-versatile",openai:"gpt-4o-mini",anthropic:"claude-sonnet-4-20250514",gemini:"gemini-2.0-flash-exp"},llmTiers:{groq:"free",openai:"tier1",anthropic:"tier1",gemini:"free"}},w=class w{static async initialize(){if(this.initialized){console.log("StorageManager: Already initialized, skipping");return}if(this.initialized=!0,console.log("StorageManager: Starting initialization..."),typeof chrome>"u")throw new Error("chrome API is not available");if(!chrome.storage)throw new Error("chrome.storage API is not available");if(!chrome.storage.local)throw new Error("chrome.storage.local API is not available");console.log("StorageManager: ✅ chrome.storage.local is available");try{console.log("StorageManager: Getting data with 5000ms timeout...");const e=await Promise.race([chrome.storage.local.get(["snippets","settings"]),new Promise((n,r)=>setTimeout(()=>r(new Error("Storage get timed out after 5000ms")),5e3))]),s=e.snippets||{};let i=!1;for(const n of Object.values(s))n.triggerMode||(n.triggerMode="word",i=!0,console.log("StorageManager: Added default triggerMode to snippet",n.id)),n.label||(n.label=n.trigger,i=!0,console.log("StorageManager: Added default label to snippet",n.id));this.snippetCache=s,this.settingsCache={...b,...e.settings},i&&(console.log("StorageManager: Updating snippets with triggerMode"),await chrome.storage.local.set({snippets:this.snippetCache})),console.log("StorageManager: Loaded",Object.keys(this.snippetCache).length,"snippets"),(!e.settings||JSON.stringify(Object.keys(e.settings))!==JSON.stringify(Object.keys(b)))&&(console.log("StorageManager: Updating settings with new fields"),await chrome.storage.local.set({settings:this.settingsCache})),chrome.storage.onChanged.addListener((n,r)=>{r==="local"&&(n.snippets&&(this.snippetCache=n.snippets.newValue||{},console.log("StorageManager: Snippets updated from external change")),n.settings&&(this.settingsCache=n.settings.newValue||b,console.log("StorageManager: Settings updated from external change")))}),console.log("StorageManager: ✅ Initialized successfully")}catch(t){throw this.initialized=!1,console.error("StorageManager: ❌ Failed to initialize:",t),t}}static async getSnippets(){return this.initialized||await this.initialize(),this.snippetCache}static async getSnippet(t){return this.initialized||await this.initialize(),this.snippetCache[t]}static async saveSnippet(t){this.initialized||await this.initialize(),this.snippetCache[t.id]=t,await chrome.storage.local.set({snippets:this.snippetCache})}static async deleteSnippet(t){this.initialized||await this.initialize(),delete this.snippetCache[t],await chrome.storage.local.set({snippets:this.snippetCache})}static async getSettings(){return this.initialized||await this.initialize(),this.settingsCache}static async saveSettings(t){this.initialized||await this.initialize(),this.settingsCache=t,await chrome.storage.local.set({settings:t})}static async incrementUsage(t){this.initialized||await this.initialize();const e=this.snippetCache[t];e&&(e.usageCount++,e.lastUsed=Date.now(),await this.saveSnippet(e))}static async exportData(){return this.initialized||await this.initialize(),{snippets:this.snippetCache,settings:this.settingsCache}}static async importData(t){this.initialized||await this.initialize(),t.snippets&&(this.snippetCache={...this.snippetCache,...t.snippets},await chrome.storage.local.set({snippets:this.snippetCache})),t.settings&&(this.settingsCache={...this.settingsCache,...t.settings},await chrome.storage.local.set({settings:this.settingsCache}))}};w.snippetCache={},w.settingsCache=b,w.initialized=!1;let h=w;class T{constructor(){this.children=new Map,this.snippet=null,this.isEndOfWord=!1}}class P{constructor(t=!1){this.root=new T,this.caseSensitive=t}normalizeKey(t){return this.caseSensitive?t:t.toLowerCase()}insert(t){if(!t.enabled)return;const e=this.caseSensitive?t.trigger:t.trigger.toLowerCase();let s=this.root;for(const i of e){const n=this.normalizeKey(i);s.children.has(n)||s.children.set(n,new T),s=s.children.get(n)}s.isEndOfWord=!0,s.snippet=t}search(t){const e=this.caseSensitive?t:t.toLowerCase();let s=this.root;for(const i of e){const n=this.normalizeKey(i);if(!s.children.has(n))return null;s=s.children.get(n)}return s.isEndOfWord?s.snippet:null}findMatch(t){if(t.length===0)return null;let e=null;for(let s=t.length;s>0;s--){const i=t.substring(t.length-s),n=this.search(i);n&&(!e||s>e.matchLength)&&(e={snippet:n,matchLength:s})}return e}rebuild(t){this.root=new T,Object.values(t).forEach(e=>this.insert(e))}clear(){this.root=new T}}const M=class M{static parse(t){const e=[],s=new RegExp(this.COMMAND_REGEX);let i;for(;(i=s.exec(t))!==null;){const[n,r,o]=i;e.push({type:r,options:o?.trim()||void 0,startIndex:i.index,endIndex:i.index+n.length,rawMatch:n})}return e}static parseFormCommands(t){const e=[],s=new RegExp(this.FORM_COMMAND_REGEX);let i;for(;(i=s.exec(t))!==null;){const[n,r,o]=i,a=this.parseFormField(r,o);a&&e.push({type:"form",options:o,startIndex:i.index,endIndex:i.index+n.length,rawMatch:n,formField:a})}return e}static parseFormField(t,e){const s=e.split(";").map(a=>a.trim()),i={};for(const a of s){const[l,c]=a.split("=").map(u=>u.trim());l&&c&&(i[l]=c)}const n=i.label||i.name||"Field",r=i.name||n.toLowerCase().replace(/\s+/g,"_"),o={type:t.replace("form",""),name:r,label:n,required:i.required==="true"};return t==="formmenu"&&i.options&&(o.options=i.options.split(",").map(a=>a.trim())),i.default&&(o.defaultValue=t==="formtoggle"?i.default==="true":i.default),o}static hasFormCommands(t){return this.FORM_COMMAND_REGEX.test(t)}static extractFormFields(t){return this.parseFormCommands(t).map(s=>s.formField).filter(Boolean)}static getOrdinalSuffix(t){if(t>=11&&t<=13)return"th";switch(t%10){case 1:return"st";case 2:return"nd";case 3:return"rd";default:return"th"}}static parseDateShift(t){const e=t.match(/shift\s+([+-]?\d+)([dMY])/);if(!e)return null;const s=parseInt(e[1],10),i=e[2];return{value:s,unit:i}}static applyDateShift(t,e){const s=new Date(t);switch(e.unit){case"d":s.setDate(s.getDate()+e.value);break;case"M":s.setMonth(s.getMonth()+e.value);break;case"Y":s.setFullYear(s.getFullYear()+e.value);break}return s}static formatDate(t,e){let s=t,i=e||"YYYY-MM-DD";if(e){const u=this.parseDateShift(e);u&&(s=this.applyDateShift(t,u),i=e.replace(/\s*shift\s+[+-]?\d+[dMY]\s*/,"").trim()||"YYYY-MM-DD")}const n=s.getFullYear(),r=String(s.getMonth()+1).padStart(2,"0"),o=s.getDate(),a=String(o).padStart(2,"0"),l=s.toLocaleDateString("en-US",{month:"long"}),c=s.toLocaleDateString("en-US",{month:"short"});return i.replace("YYYY",String(n)).replace("YY",String(n).slice(-2)).replace("MMMM",l).replace("MMM",c).replace("Do",`${o}${this.getOrdinalSuffix(o)}`).replace("MM",r).replace("M",String(s.getMonth()+1)).replace("DD",a).replace("D",String(o))}static formatTime(t,e){const i=e||"HH:mm",n=t.getHours(),r=n%12||12,o=String(t.getMinutes()).padStart(2,"0"),a=String(t.getSeconds()).padStart(2,"0"),l=n>=12?"PM":"AM";return i==="12h"?`${r}:${o} ${l}`:i==="24h"?`${String(n).padStart(2,"0")}:${o}`:i.replace("HH",String(n).padStart(2,"0")).replace("H",String(n)).replace("hh",String(r).padStart(2,"0")).replace("h",String(r)).replace("mm",o).replace("ss",a).replace("A",l).replace("a",l.toLowerCase())}static parseDelayMs(t){if(!t)return 0;const e=t.match(/\+?(\d+(?:\.\d+)?)(s|ms)?/);if(!e)return 0;const s=parseFloat(e[1]);return(e[2]||"s")==="ms"?s:s*1e3}static async processCommands(t){const e=this.parse(t);if(e.length===0)return t;let s=t;const i=new Date;for(let n=e.length-1;n>=0;n--){const r=e[n];let o;switch(r.type){case"date":o=this.formatDate(i,r.options);break;case"time":o=this.formatTime(i,r.options);break;case"clipboard":try{o=await navigator.clipboard.readText()}catch{console.warn("TextBlitz: Clipboard access denied or unavailable"),o=r.rawMatch}break;case"cursor":case"enter":case"tab":case"delay":continue;default:o=r.rawMatch}s=s.slice(0,r.startIndex)+o+s.slice(r.endIndex)}return s}static extractKeyboardActions(t){const e=this.parse(t),s=[];let i=t,n=0;for(const r of e)if(r.type==="enter"||r.type==="tab"||r.type==="delay"){const o=r.startIndex-n;s.push({type:r.type,options:r.options,position:o}),i=i.slice(0,r.startIndex-n)+i.slice(r.endIndex-n),n+=r.rawMatch.length}return{text:i,actions:s}}static splitTextByKeyboardActions(t){const s=this.parse(t).filter(o=>o.type==="enter"||o.type==="tab"||o.type==="delay");if(s.length===0)return{chunks:[t],actions:[]};const i=[],n=[];let r=0;for(const o of s)i.push(t.substring(r,o.startIndex)),n.push({type:o.type,options:o.options}),r=o.endIndex;return i.push(t.substring(r)),{chunks:i,actions:n}}static substituteFormValues(t,e){const s=this.parseFormCommands(t);if(s.length===0)return t;let i=t;for(let n=s.length-1;n>=0;n--){const r=s[n];if(r.formField){const o=e[r.formField.name],a=o!==void 0?String(o):"";i=i.slice(0,r.startIndex)+a+i.slice(r.endIndex)}}return i}};M.COMMAND_REGEX=/\{(date|time|clipboard|cursor|enter|tab|delay)(?:[\s:]([^}]+))?\}/g,M.FORM_COMMAND_REGEX=/\{(formtext|formparagraph|formmenu|formdate|formtoggle):([^}]+)\}/g;let f=M;class B{static detectCase(t){if(!t)return"lower";const e=/[a-z]/.test(t),s=/[A-Z]/.test(t);if(!e&&!s)return"lower";if(!e&&s)return"upper";if(e&&!s)return"lower";if(/^[A-Z]/.test(t)){const i=t.split(/\s+/),n=i.filter(r=>/^[A-Z]/.test(r));return n.length>1||i.length>1&&n.length===i.length?"title":"capitalize"}return"mixed"}static transform(t,e,s){switch(e){case"upper":return t.toUpperCase();case"lower":return t.toLowerCase();case"title":return this.toTitleCase(t);case"capitalize":return this.capitalize(t);case"match":return s?this.matchCase(t,s):t;case"none":default:return t}}static toTitleCase(t){return t.split(/(\s+)/).map(e=>/^\s+$/.test(e)?e:e.charAt(0).toUpperCase()+e.slice(1).toLowerCase()).join("")}static capitalize(t){return t&&t.charAt(0).toUpperCase()+t.slice(1).toLowerCase()}static matchCase(t,e){switch(this.detectCase(e)){case"upper":return t.toUpperCase();case"lower":return t.toLowerCase();case"title":return this.toTitleCase(t);case"capitalize":return this.capitalize(t);default:return t}}}const v=class v{static setDebugMode(t){this.debugMode=t}static log(...t){this.debugMode&&console.log(...t)}static getElementText(t){return t instanceof HTMLInputElement||t instanceof HTMLTextAreaElement?t.value:t.isContentEditable&&t.textContent||""}static verifyInsertion(t,e){const s=this.getElementText(t),i=e.substring(0,Math.min(10,e.length));return s.includes(i)}static detectFramework(t){return Object.keys(t).find(s=>s.startsWith("__react")||s.startsWith("_react"))?"react":"__vue__"in t||"__vueParentComponent"in t?"vue":t.shadowRoot?"shadow":t.classList.contains("CodeMirror")||t.classList.contains("monaco-editor")||t.getAttribute("data-lexical-editor")!==null?"custom-editor":"standard"}static async tier0DirectManipulation(t,e,s){try{if(this.log("TextBlitz: Trying Tier 0 - Direct Manipulation"),t instanceof HTMLTextAreaElement||t instanceof HTMLInputElement){const i=t.value,n=t.selectionStart??i.length;if(i.endsWith(e)){const l=i.substring(0,i.length-e.length)+s;t.value=l;const c=l.length;return t.setSelectionRange(c,c),t.dispatchEvent(new InputEvent("input",{bubbles:!0,cancelable:!0,inputType:"insertText",data:s})),this.log("TextBlitz: ✅ Tier 0 succeeded (end of value)"),!0}if(i.substring(0,n).endsWith(e)){const a=i.substring(0,n-e.length),l=i.substring(n),c=a+s+l;t.value=c;const u=a.length+s.length;return t.setSelectionRange(u,u),t.dispatchEvent(new InputEvent("input",{bubbles:!0,cancelable:!0,inputType:"insertText",data:s})),this.log("TextBlitz: ✅ Tier 0 succeeded (before cursor)"),!0}const o=i.lastIndexOf(e);if(o!==-1){const a=i.substring(0,o),l=i.substring(o+e.length),c=a+s+l;t.value=c;const u=a.length+s.length;return t.setSelectionRange(u,u),t.dispatchEvent(new InputEvent("input",{bubbles:!0,cancelable:!0,inputType:"insertText",data:s})),this.log("TextBlitz: ✅ Tier 0 succeeded (found in value)"),!0}return this.log("TextBlitz: Tier 0 - trigger not found in value"),!1}return!1}catch(i){return this.log("TextBlitz: Tier 0 failed:",i),!1}}static async tier1ExecCommand(t,e,s){try{this.log("TextBlitz: Trying Tier 1 - execCommand");const i=window.getSelection();if(!i||i.rangeCount===0)return!1;const n=i.getRangeAt(0);let{startContainer:r,startOffset:o}=n;if(r.nodeType!==Node.TEXT_NODE)if(r.childNodes.length>0){const U=Math.min(o,r.childNodes.length-1),S=r.childNodes[U];if(S&&S.nodeType===Node.TEXT_NODE)r=S,o=S.textContent?.length||0;else return!1}else return!1;const a=r;if(!(a.textContent||"").substring(0,o).endsWith(e))return!1;const u=document.createRange(),p=o-e.length;return u.setStart(a,p),u.setEnd(a,o),i.removeAllRanges(),i.addRange(u),!document.execCommand("delete",!1)||!document.execCommand("insertText",!1,s)?!1:(t.dispatchEvent(new InputEvent("input",{bubbles:!0,cancelable:!1,inputType:"insertText",data:s})),this.log("TextBlitz: ✅ Tier 1 succeeded"),!0)}catch(i){return this.log("TextBlitz: Tier 1 failed:",i),!1}}static async tier2AggressiveEvents(t,e,s,i){try{if(this.log("TextBlitz: Trying Tier 2 - Aggressive Events (framework:",i,")"),!(t instanceof HTMLInputElement||t instanceof HTMLTextAreaElement))return!1;const n=t.selectionStart??t.value.length,r=t.value,o=r.substring(0,n-e.length),a=r.substring(n),l=Object.getOwnPropertyDescriptor(window.HTMLInputElement.prototype,"value")?.set,c=o+s+a;l?l.call(t,c):t.value=c;const u=t._valueTracker;u&&u.setValue("");const p=[new InputEvent("input",{bubbles:!0,cancelable:!0,inputType:"insertText",data:s}),new Event("change",{bubbles:!0}),new InputEvent("textInput",{bubbles:!0,data:s}),new Event("keyup",{bubbles:!0})];for(const x of p)t.dispatchEvent(x);const y=o.length+s.length;try{t.setSelectionRange(y,y)}catch{}return this.log("TextBlitz: ✅ Tier 2 succeeded"),!0}catch(n){return this.log("TextBlitz: Tier 2 failed:",n),!1}}static async tier3Clipboard(t,e,s){try{this.log("TextBlitz: Trying Tier 3 - Clipboard");let i="";try{i=await navigator.clipboard.readText()}catch{}if(await navigator.clipboard.writeText(s),t.focus(),t instanceof HTMLInputElement||t instanceof HTMLTextAreaElement){const r=t.selectionStart??t.value.length,o=r-e.length;t.setSelectionRange(o,r)}else if(t.isContentEditable){const r=window.getSelection();if(r&&r.rangeCount>0){const o=r.getRangeAt(0);let{startContainer:a,startOffset:l}=o;if(a.nodeType===Node.TEXT_NODE){const c=a;if((c.textContent||"").substring(0,l).endsWith(e)){const p=document.createRange();p.setStart(c,l-e.length),p.setEnd(c,l),r.removeAllRanges(),r.addRange(p)}}}}const n=document.execCommand("paste",!1);if(i)try{await navigator.clipboard.writeText(i)}catch{}return n?(this.log("TextBlitz: ✅ Tier 3 succeeded"),!0):!1}catch(i){return this.log("TextBlitz: Tier 3 failed:",i),!1}}static async tier4Keyboard(t,e,s){try{this.log("TextBlitz: Trying Tier 4 - Keyboard Simulation"),t.focus();for(let i=0;i<e.length;i++)this.simulateKey(t,"Backspace","Backspace",8),await this.delay(10);for(const i of s){const n=i===`
`?"Enter":i,r=i.charCodeAt(0);this.simulateKey(t,i,n,r),await this.delay(10)}return this.log("TextBlitz: ✅ Tier 4 succeeded"),!0}catch(i){return this.log("TextBlitz: Tier 4 failed:",i),!1}}static simulateKey(t,e,s,i){const n={key:e,code:s,keyCode:i,which:i,bubbles:!0,cancelable:!0,composed:!0};t.dispatchEvent(new KeyboardEvent("keydown",n)),t.dispatchEvent(new KeyboardEvent("keypress",n)),t.dispatchEvent(new KeyboardEvent("keyup",n))}static delay(t){return new Promise(e=>setTimeout(e,t))}static async replace(t,e,s,i){try{this.log("TextBlitz: === Starting Replacement ==="),this.log("TextBlitz: Element:",t.tagName,t.className);let n=await f.processCommands(s);i&&i!=="none"&&(n=B.transform(n,i,e));const r="{cursor}";n.includes(r)&&(n=n.replace(r,""));const{chunks:o}=f.splitTextByKeyboardActions(n),a=o.join("");this.log("TextBlitz: Final expansion:",a);const l=this.detectFramework(t);this.log("TextBlitz: Detected framework:",l);const c=[{name:"DirectManipulation",fn:()=>this.tier0DirectManipulation(t,e,a)},{name:"ExecCommand",fn:()=>this.tier1ExecCommand(t,e,a)},{name:"AggressiveEvents",fn:()=>this.tier2AggressiveEvents(t,e,a,l)},{name:"Clipboard",fn:()=>this.tier3Clipboard(t,e,a)},{name:"Keyboard",fn:()=>this.tier4Keyboard(t,e,a)}];for(const u of c)if(await u.fn()){if(await this.delay(50),this.verifyInsertion(t,a))return this.log(`TextBlitz: ✅ ${u.name} succeeded`),!0;this.log(`TextBlitz: ⚠️ ${u.name} reported success but verification failed, trying next tier...`)}return console.error("TextBlitz: ❌ All replacement tiers failed"),!1}catch(n){return console.error("TextBlitz: Fatal error in replace:",n),!1}}static isValidInputElement(t){if(this.log("TextBlitz: isValidInputElement check on",t.tagName,t instanceof HTMLInputElement?`type=${t.type}`:""),t instanceof HTMLInputElement&&t.type==="password")return this.log("TextBlitz: Skipping password field"),!1;if(t instanceof HTMLInputElement&&t.type==="hidden")return this.log("TextBlitz: Skipping hidden field"),!1;if(t instanceof HTMLInputElement&&["number","date","time","color","range","file","datetime-local","month","week"].includes(t.type))return this.log("TextBlitz: Skipping incompatible input type:",t.type),!1;const e=t instanceof HTMLInputElement||t instanceof HTMLTextAreaElement||t.isContentEditable;return this.log("TextBlitz: isValidInputElement returning:",e),e}};v.debugMode=!1;let g=v;const L=new Set([" ","	",`
`,"\r",".",",",";",":","!","?","-","_","(",")","[","]","{","}",'"',"'","/","\\","|","<",">"]);function C(d){return!d||d.length===0?!0:L.has(d)}function z(d,t,e,s){const i=d.length>0?d[d.length-1]:void 0,n=e.length>0?e[0]:void 0;switch(s){case"anywhere":return!0;case"word":return C(i);case"word-both":return C(i)&&C(n);default:return console.warn("Unknown trigger mode:",s),!1}}class k{constructor(t){this.config=t}}class I extends k{constructor(){super(...arguments),this.baseURL="https://api.groq.com/openai/v1",this.model="llama-3.1-8b-instant"}async complete(t){const e=this.config.timeout||5e3,s=new AbortController,i=setTimeout(()=>s.abort(),e);try{const n=this.config.systemPrompt||"You are a text completion assistant. Output clean, paste-ready text with no quotes, markdown formatting, or explanations. Generate natural variations of the requested content. Keep responses under 50 words unless explicitly asked for more. Never ask questions back or include placeholders like [brackets]. Output only the exact text the user needs.",r=await fetch(`${this.baseURL}/chat/completions`,{method:"POST",headers:{Authorization:`Bearer ${this.config.apiKey}`,"Content-Type":"application/json"},body:JSON.stringify({model:this.config.model||this.model,messages:[{role:"system",content:n},{role:"user",content:t.prompt}],max_tokens:t.maxTokens||100,temperature:t.temperature||.7}),signal:s.signal});if(clearTimeout(i),!r.ok){const c=await r.text();throw new Error(`Groq API error: ${r.status} - ${c}`)}const o=await r.json();if(!o.choices||o.choices.length===0)throw new Error("No response from Groq");const a=o.choices[0].message.content.trim(),l=o.usage||{prompt_tokens:0,completion_tokens:0,total_tokens:0};return{text:a,tokensUsed:{input:l.prompt_tokens,output:l.completion_tokens,total:l.total_tokens},model:o.model||this.model,provider:"groq"}}catch(n){throw clearTimeout(i),n.name==="AbortError"?new Error("Groq request timed out"):n}}async testConnection(){try{return await this.complete({prompt:'Say "test" and nothing else',maxTokens:10}),!0}catch{return!1}}getModelName(){return this.config.model||this.model}}class A extends k{constructor(){super(...arguments),this.baseURL="https://api.anthropic.com/v1",this.model="claude-sonnet-4-20250514",this.apiVersion="2023-06-01"}async complete(t){const e=this.config.timeout||5e3,s=new AbortController,i=setTimeout(()=>s.abort(),e);try{const n=this.config.systemPrompt||"You are a text completion assistant. Output clean, paste-ready text with no quotes, markdown formatting, or explanations. Generate natural variations of the requested content. Keep responses under 50 words unless explicitly asked for more. Never ask questions back or include placeholders like [brackets]. Output only the exact text the user needs.",r=await fetch(`${this.baseURL}/messages`,{method:"POST",headers:{"x-api-key":this.config.apiKey,"anthropic-version":this.apiVersion,"content-type":"application/json"},body:JSON.stringify({model:this.config.model||this.model,max_tokens:t.maxTokens||100,messages:[{role:"user",content:`${n}

${t.prompt}`}],temperature:t.temperature||.7}),signal:s.signal});if(clearTimeout(i),!r.ok){const c=await r.text();throw new Error(`Anthropic API error: ${r.status} - ${c}`)}const o=await r.json();if(!o.content||o.content.length===0)throw new Error("No response from Anthropic");const a=o.content[0].text.trim(),l=o.usage||{input_tokens:0,output_tokens:0};return{text:a,tokensUsed:{input:l.input_tokens,output:l.output_tokens,total:l.input_tokens+l.output_tokens},model:o.model||this.model,provider:"anthropic"}}catch(n){throw clearTimeout(i),n.name==="AbortError"?new Error("Anthropic request timed out"):n}}async testConnection(){try{return await this.complete({prompt:'Say "test" and nothing else',maxTokens:10}),!0}catch{return!1}}getModelName(){return this.config.model||this.model}}class q extends k{constructor(){super(...arguments),this.baseURL="https://api.openai.com/v1",this.model="gpt-4o-mini"}async complete(t){const e=this.config.timeout||5e3,s=new AbortController,i=setTimeout(()=>s.abort(),e);try{const n=this.config.systemPrompt||"You are a text completion assistant. Output clean, paste-ready text with no quotes, markdown formatting, or explanations. Generate natural variations of the requested content. Keep responses under 50 words unless explicitly asked for more. Never ask questions back or include placeholders like [brackets]. Output only the exact text the user needs.",r=await fetch(`${this.baseURL}/chat/completions`,{method:"POST",headers:{Authorization:`Bearer ${this.config.apiKey}`,"Content-Type":"application/json"},body:JSON.stringify({model:this.config.model||this.model,messages:[{role:"system",content:n},{role:"user",content:t.prompt}],max_tokens:t.maxTokens||100,temperature:t.temperature||.7}),signal:s.signal});if(clearTimeout(i),!r.ok){const c=await r.text();throw new Error(`OpenAI API error: ${r.status} - ${c}`)}const o=await r.json();if(!o.choices||o.choices.length===0)throw new Error("No response from OpenAI");const a=o.choices[0].message.content.trim(),l=o.usage||{prompt_tokens:0,completion_tokens:0,total_tokens:0};return{text:a,tokensUsed:{input:l.prompt_tokens,output:l.completion_tokens,total:l.total_tokens},model:o.model||this.model,provider:"openai"}}catch(n){throw clearTimeout(i),n.name==="AbortError"?new Error("OpenAI request timed out"):n}}async testConnection(){try{return await this.complete({prompt:'Say "test" and nothing else',maxTokens:10}),!0}catch{return!1}}getModelName(){return this.config.model||this.model}}class O extends k{constructor(){super(...arguments),this.baseURL="https://generativelanguage.googleapis.com/v1beta",this.model="gemini-1.5-flash"}async complete(t){const e=this.config.timeout||5e3,s=new AbortController,i=setTimeout(()=>s.abort(),e);try{const n=this.config.systemPrompt||"You are a text completion assistant. Output clean, paste-ready text with no quotes, markdown formatting, or explanations. Generate natural variations of the requested content. Keep responses under 50 words unless explicitly asked for more. Never ask questions back or include placeholders like [brackets]. Output only the exact text the user needs.",r=this.config.model||this.model,o=await fetch(`${this.baseURL}/models/${r}:generateContent?key=${this.config.apiKey}`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({contents:[{parts:[{text:`${n}

${t.prompt}`}]}],generationConfig:{maxOutputTokens:t.maxTokens||100,temperature:t.temperature||.7}}),signal:s.signal});if(clearTimeout(i),!o.ok){const x=await o.text();throw new Error(`Gemini API error: ${o.status} - ${x}`)}const a=await o.json();if(!a.candidates||a.candidates.length===0)throw new Error("No response from Gemini");const l=a.candidates[0];if(!l.content||!l.content.parts||l.content.parts.length===0)throw new Error("Invalid response structure from Gemini");const c=l.content.parts[0].text.trim(),u=a.usageMetadata||{},p=u.promptTokenCount||0,y=u.candidatesTokenCount||0;return{text:c,tokensUsed:{input:p,output:y,total:p+y},model:r,provider:"gemini"}}catch(n){throw clearTimeout(i),n.name==="AbortError"?new Error("Gemini request timed out"):n}}async testConnection(){try{return await this.complete({prompt:'Say "test" and nothing else',maxTokens:10}),!0}catch{return!1}}getModelName(){return this.config.model||this.model}}const D={groq:{free:{requestsPerMinute:30,requestsPerDay:14400},paid:{requestsPerMinute:300,requestsPerDay:144e3}},openai:{tier1:{requestsPerMinute:500,tokensPerMinute:3e4},tier2:{requestsPerMinute:5e3,tokensPerMinute:45e4},tier3:{requestsPerMinute:5e3,tokensPerMinute:2e6},tier4:{requestsPerMinute:1e4,tokensPerMinute:4e6},tier5:{requestsPerMinute:1e4,tokensPerMinute:2e7}},anthropic:{tier1:{requestsPerMinute:50,tokensPerMinute:4e4},tier2:{requestsPerMinute:1e3,tokensPerMinute:8e4},tier3:{requestsPerMinute:2e3,tokensPerMinute:16e4},tier4:{requestsPerMinute:4e3,tokensPerMinute:4e5}},gemini:{free:{requestsPerMinute:15},paid:{requestsPerMinute:1500}}},N={"llama-3.3-70b-versatile":{input:.59,output:.79},"llama-3.1-8b-instant":{input:.05,output:.08},"gpt-4o-mini":{input:.15,output:.6},"gpt-4o":{input:2.5,output:10},"claude-sonnet-4-20250514":{input:3,output:15},"claude-opus-4-20250514":{input:15,output:75},"gemini-2.0-flash-exp":{input:0,output:0},"gemini-2.5-pro":{input:1.25,output:5}};function E(d,t){const e=D[d];return e[t]||e[Object.keys(e)[0]]}function $(d){return N[d]||{input:0,output:0}}class F{constructor(){this.stats=new Map,this.loadStats()}async loadStats(){try{const t=await chrome.storage.local.get("llmUsage");if(t.llmUsage)for(const e of["groq","anthropic","openai","gemini"]){const s=t.llmUsage[e];s&&this.stats.set(e,s)}}catch(t){console.error("Failed to load LLM usage stats:",t)}}async saveStats(){try{const t={};for(const e of["groq","anthropic","openai","gemini"])this.stats.has(e)&&(t[e]=this.stats.get(e));await chrome.storage.local.set({llmUsage:t})}catch(t){console.error("Failed to save LLM usage stats:",t)}}async getOrCreateStats(t){if(!this.stats.has(t)){const s=(await h.getSettings()).llmModels[t]||"";this.stats.set(t,{provider:t,model:s,requests:0,tokensInput:0,tokensOutput:0,tokensTotal:0,estimatedCost:0,lastReset:Date.now(),requestsThisMinute:0,minuteWindowStart:Date.now()})}return this.stats.get(t)}async canMakeRequest(t){const e=await this.getOrCreateStats(t),s=await h.getSettings(),i=Date.now();i-e.minuteWindowStart>6e4&&(e.requestsThisMinute=0,e.minuteWindowStart=i);let n;if(s.llmCustomLimits?.[t]?.requestsPerMinute)n=s.llmCustomLimits[t].requestsPerMinute;else{const r=s.llmTiers[t]||this.getDefaultTier(t);n=E(t,r).requestsPerMinute}return e.requestsThisMinute<n}async trackRequest(t){const e=await this.getOrCreateStats(t.provider),s=Date.now();s-e.minuteWindowStart>6e4&&(e.requestsThisMinute=0,e.minuteWindowStart=s),e.requests++,e.requestsThisMinute++,e.tokensInput+=t.tokensUsed.input,e.tokensOutput+=t.tokensUsed.output,e.tokensTotal+=t.tokensUsed.total,e.model=t.model;const i=$(t.model),n=t.tokensUsed.input/1e6*i.input,r=t.tokensUsed.output/1e6*i.output;e.estimatedCost+=n+r,await this.saveStats()}async getStats(t){return await this.getOrCreateStats(t)}async getAllStats(){return{groq:await this.getOrCreateStats("groq"),anthropic:await this.getOrCreateStats("anthropic"),openai:await this.getOrCreateStats("openai"),gemini:await this.getOrCreateStats("gemini")}}async resetStats(t){const e=await this.getOrCreateStats(t),i=(await h.getSettings()).llmModels[t]||"";e.model=i,e.requests=0,e.tokensInput=0,e.tokensOutput=0,e.tokensTotal=0,e.estimatedCost=0,e.lastReset=Date.now(),e.requestsThisMinute=0,e.minuteWindowStart=Date.now(),await this.saveStats()}async resetAllStats(){for(const t of["groq","anthropic","openai","gemini"])await this.resetStats(t)}async isApproachingLimit(t,e=80){const s=await this.getOrCreateStats(t),i=await h.getSettings();let n;if(i.llmCustomLimits?.[t]?.requestsPerMinute)n=i.llmCustomLimits[t].requestsPerMinute;else{const r=i.llmTiers[t]||this.getDefaultTier(t);n=E(t,r).requestsPerMinute}return s.requestsThisMinute>=n*(e/100)}async getRateLimit(t){const e=await h.getSettings();if(e.llmCustomLimits?.[t])return e.llmCustomLimits[t];const s=e.llmTiers[t]||this.getDefaultTier(t);return E(t,s)}getDefaultTier(t){return{groq:"free",openai:"tier1",anthropic:"tier1",gemini:"free"}[t]}}class _{constructor(){this.providers=new Map,this.usageTracker=new F}setProvider(t,e,s,i,n){let r;const o={apiKey:e,model:s,timeout:i,systemPrompt:n};switch(t){case"groq":r=new I(o);break;case"anthropic":r=new A(o);break;case"openai":r=new q(o);break;case"gemini":r=new O(o);break;default:throw new Error(`Unknown provider: ${t}`)}this.providers.set(t,r)}async complete(t,e){const s=this.providers.get(t);if(!s)throw new Error(`Provider ${t} not initialized. Please add an API key in settings.`);if(!await this.usageTracker.canMakeRequest(t))throw new Error(`Rate limit exceeded for ${t}. Please wait a minute.`);await this.usageTracker.isApproachingLimit(t)&&console.warn(`TextBlitz: Approaching rate limit for ${t}`);const i=await s.complete(e);return await this.usageTracker.trackRequest(i),i}async testConnection(t){const e=this.providers.get(t);return e?e.testConnection():!1}getUsageTracker(){return this.usageTracker}}const m=new _;class K{constructor(){this.overlay=null,this.modal=null,this.onSubmit=null,this.onCancel=null}show(t,e,s){this.onSubmit=e,this.onCancel=s,this.overlay=document.createElement("div"),this.overlay.style.cssText=`
      position: fixed;
      top: 0;
      left: 0;
      width: 100vw;
      height: 100vh;
      background: rgba(0, 0, 0, 0.5);
      backdrop-filter: blur(2px);
      z-index: 999999;
      display: flex;
      align-items: center;
      justify-content: center;
    `,this.modal=document.createElement("div"),this.modal.style.cssText=`
      background: white;
      border-radius: 8px;
      box-shadow: 0 10px 25px rgba(0, 0, 0, 0.2);
      max-width: 500px;
      width: 90%;
      max-height: 80vh;
      overflow-y: auto;
      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
    `,this.modal.innerHTML=`
      <div style="padding: 20px; border-bottom: 1px solid #e5e7eb;">
        <h2 style="margin: 0; font-size: 18px; font-weight: 600; color: #111827;">
          Complete Snippet
        </h2>
        <p style="margin: 8px 0 0; font-size: 13px; color: #6b7280;">
          Fill in the fields below to insert your snippet
        </p>
      </div>
      <form id="textblitz-form" style="padding: 20px;">
        ${t.map(a=>this.renderField(a)).join("")}
      </form>
      <div style="padding: 16px 20px; border-top: 1px solid #e5e7eb; display: flex; gap: 8px; justify-content: flex-end;">
        <button
          type="button"
          id="textblitz-form-cancel"
          style="padding: 8px 16px; border: 1px solid #e5e7eb; border-radius: 6px; background: white; color: #374151; font-size: 14px; font-weight: 500; cursor: pointer;"
        >
          Cancel
        </button>
        <button
          type="submit"
          form="textblitz-form"
          style="padding: 8px 16px; border: none; border-radius: 6px; background: #6366f1; color: white; font-size: 14px; font-weight: 500; cursor: pointer;"
        >
          Insert
        </button>
      </div>
    `,this.overlay.appendChild(this.modal),document.body.appendChild(this.overlay),this.modal.querySelector("#textblitz-form")?.addEventListener("submit",a=>{a.preventDefault(),this.handleSubmit(t)}),this.modal.querySelector("#textblitz-form-cancel")?.addEventListener("click",()=>this.handleCancel());const r=a=>{a.key==="Escape"&&(this.handleCancel(),document.removeEventListener("keydown",r))};document.addEventListener("keydown",r),this.modal.querySelector("input, textarea, select")?.focus()}renderField(t){const{type:e,name:s,label:i,options:n,defaultValue:r,required:o}=t;let a="";const l=o?"required":"",c=o?'<span style="color: #ef4444;">*</span>':"";switch(e){case"text":a=`
          <input
            type="text"
            name="${s}"
            id="${s}"
            value="${r||""}"
            ${l}
            style="width: 100%; padding: 8px 12px; border: 1px solid #e5e7eb; border-radius: 6px; font-size: 14px;"
          />
        `;break;case"paragraph":a=`
          <textarea
            name="${s}"
            id="${s}"
            rows="4"
            ${l}
            style="width: 100%; padding: 8px 12px; border: 1px solid #e5e7eb; border-radius: 6px; font-size: 14px; resize: vertical;"
          >${r||""}</textarea>
        `;break;case"menu":a=`
          <select
            name="${s}"
            id="${s}"
            ${l}
            style="width: 100%; padding: 8px 12px; border: 1px solid #e5e7eb; border-radius: 6px; font-size: 14px;"
          >
            ${n?.map(p=>`<option value="${p}">${p}</option>`).join("")||""}
          </select>
        `;break;case"date":a=`
          <input
            type="date"
            name="${s}"
            id="${s}"
            value="${r||""}"
            ${l}
            style="width: 100%; padding: 8px 12px; border: 1px solid #e5e7eb; border-radius: 6px; font-size: 14px;"
          />
        `;break;case"toggle":a=`
          <label style="display: flex; align-items: center; gap: 8px; cursor: pointer;">
            <input
              type="checkbox"
              name="${s}"
              id="${s}"
              ${r===!0||r==="true"?"checked":""}
              style="width: 18px; height: 18px; cursor: pointer;"
            />
            <span style="font-size: 14px; color: #374151;">Enabled</span>
          </label>
        `;break}return`
      <div style="margin-bottom: 16px;">
        <label
          for="${s}"
          style="display: block; margin-bottom: 6px; font-size: 14px; font-weight: 500; color: #111827;"
        >
          ${i} ${c}
        </label>
        ${a}
      </div>
    `}handleSubmit(t){const e=this.modal?.querySelector("#textblitz-form");if(!e)return;const s={};for(const i of t){const n=e.elements.namedItem(i.name);n&&(i.type==="toggle"?s[i.name]=n.checked:s[i.name]=n.value)}this.onSubmit?.(s),this.hide()}handleCancel(){this.onCancel?.(),this.hide()}hide(){this.overlay&&(this.overlay.remove(),this.overlay=null),this.modal=null,this.onSubmit=null,this.onCancel=null}}class R{constructor(){this.settings=null,this.isExpanding=!1,this.keyboardBuffer="",this.lastKeyTime=0,this.lastExpansionTime=0,this.trie=new P(!1),this.formPopup=new K,this.initialize()}async initialize(){if(this.settings?.debugMode){const t=window===window.top?"top frame":"iframe";console.log(`TextBlitz: Starting initialization in ${t}...`)}try{if(await h.initialize(),this.settings=await h.getSettings(),g.setDebugMode(this.settings.debugMode),this.settings.llmKeys.groq&&m.setProvider("groq",this.settings.llmKeys.groq,this.settings.llmModels.groq,this.settings.llmTimeout,this.settings.llmSystemPrompt),this.settings.llmKeys.anthropic&&m.setProvider("anthropic",this.settings.llmKeys.anthropic,this.settings.llmModels.anthropic,this.settings.llmTimeout,this.settings.llmSystemPrompt),this.settings.llmKeys.openai&&m.setProvider("openai",this.settings.llmKeys.openai,this.settings.llmModels.openai,this.settings.llmTimeout,this.settings.llmSystemPrompt),this.settings.llmKeys.gemini&&m.setProvider("gemini",this.settings.llmKeys.gemini,this.settings.llmModels.gemini,this.settings.llmTimeout,this.settings.llmSystemPrompt),this.settings.debugMode&&console.log("TextBlitz: Settings loaded",this.settings),!this.settings.enabled){console.log("TextBlitz: ❌ DISABLED in settings");return}const t=await h.getSnippets();this.trie.rebuild(t),this.setupListeners();const e=Object.keys(t).length;e===0?console.warn("TextBlitz: ⚠️ INITIALIZED but NO SNIPPETS FOUND!"):console.log("TextBlitz: ✅ Initialized with",e,"snippets")}catch(t){console.error("TextBlitz: ❌ Failed to initialize",t)}}setupListeners(){document.addEventListener("input",this.handleInput.bind(this),!0),document.addEventListener("keydown",this.handleKeydown.bind(this),!0),setTimeout(()=>{document.querySelectorAll("textarea").forEach(e=>{this.settings?.debugMode&&console.log("TextBlitz: Found textarea, adding listeners:",{id:e.id,visible:e.offsetParent!==null}),e.addEventListener("input",this.handleInput.bind(this),{passive:!0})})},1e3),chrome.storage.onChanged.addListener((t,e)=>{e==="local"&&(t.snippets&&this.trie.rebuild(t.snippets.newValue||{}),t.settings&&(this.settings=t.settings.newValue,g.setDebugMode(this.settings.debugMode),this.settings.llmKeys.groq&&m.setProvider("groq",this.settings.llmKeys.groq,this.settings.llmModels.groq,this.settings.llmTimeout,this.settings.llmSystemPrompt),this.settings.llmKeys.anthropic&&m.setProvider("anthropic",this.settings.llmKeys.anthropic,this.settings.llmModels.anthropic,this.settings.llmTimeout,this.settings.llmSystemPrompt),this.settings.llmKeys.openai&&m.setProvider("openai",this.settings.llmKeys.openai,this.settings.llmModels.openai,this.settings.llmTimeout,this.settings.llmSystemPrompt),this.settings.llmKeys.gemini&&m.setProvider("gemini",this.settings.llmKeys.gemini,this.settings.llmModels.gemini,this.settings.llmTimeout,this.settings.llmSystemPrompt)))})}handleInput(t){const e=t.target;if(this.settings?.debugMode&&console.log("TextBlitz: handleInput fired, event type:",t.type,"target:",e.tagName),!this.settings?.enabled){this.settings?.debugMode&&console.log("TextBlitz: Extension disabled");return}if(this.isExpanding){this.settings?.debugMode&&console.log("TextBlitz: Currently expanding, skipping");return}if(Date.now()-this.lastExpansionTime<100){this.settings?.debugMode&&console.log("TextBlitz: Keyboard buffer just handled expansion, skipping input event");return}if(!g.isValidInputElement(e)){this.settings?.debugMode&&console.log("TextBlitz: Invalid input element");return}this.checkForMatch(e)}handleKeydown(t){if(!this.settings?.enabled||this.isExpanding)return;const e=t.key,s=Date.now();if(s-this.lastKeyTime>2e3&&(this.keyboardBuffer=""),this.lastKeyTime=s,!(t.ctrlKey||t.metaKey||t.altKey)){if(e.length===1)this.keyboardBuffer+=e;else if(e==="Backspace")this.keyboardBuffer=this.keyboardBuffer.slice(0,-1);else if(e===" ")this.keyboardBuffer+=" ";else return;this.settings?.debugMode&&console.log("TextBlitz: Keyboard buffer:",this.keyboardBuffer),this.keyboardBuffer.length>200&&(this.keyboardBuffer=this.keyboardBuffer.slice(-200)),this.checkBufferForMatch()}}async checkBufferForMatch(){if(!this.keyboardBuffer||Date.now()-this.lastExpansionTime<500)return;const t=this.keyboardBuffer.slice(-50),e=this.trie.findMatch(t);if(!e)return;const{snippet:s}=e,i=this.settings.caseSensitive?s.trigger:s.trigger.toLowerCase(),n=this.settings.caseSensitive?t:t.toLowerCase();if(this.settings?.debugMode&&console.log("TextBlitz: Buffer match -",s.label,"trigger:",i),!n.endsWith(i))return;const r=t.substring(0,t.length-i.length);if(!z(r,i,"",s.triggerMode))return;const a=document.activeElement;if(!a){this.settings?.debugMode&&console.log("TextBlitz: No activeElement found");return}this.settings?.debugMode&&console.log("TextBlitz: Expanding on",a.tagName),this.keyboardBuffer="",this.lastExpansionTime=Date.now(),setTimeout(async()=>{try{if(this.isExpanding)return;if(!a||!document.contains(a)){this.settings?.debugMode&&console.log("TextBlitz: Element no longer in document, skipping expansion");return}this.isExpanding=!0;const l=await g.replace(a,s.trigger,s.expansion,s.caseTransform);this.isExpanding=!1,l&&(this.lastExpansionTime=Date.now(),h.incrementUsage(s.id).catch(c=>{console.error("TextBlitz: Failed to update usage stats",c)}))}catch(l){this.isExpanding=!1,console.error("TextBlitz: Error in delayed expansion:",l)}},0)}getTextBeforeCursor(t){try{if(t instanceof HTMLInputElement||t instanceof HTMLTextAreaElement){const e=t.selectionStart??t.value.length;return t.value.substring(0,e)}if(t.isContentEditable){const e=window.getSelection();if(!e||e.rangeCount===0)return t.textContent||"";const s=e.getRangeAt(0);let{startContainer:i,startOffset:n}=s;if(i.nodeType===Node.TEXT_NODE)return(i.textContent||"").substring(0,n);if(i.childNodes.length>0){const r=Math.min(n,i.childNodes.length-1),o=i.childNodes[r];if(o&&o.nodeType===Node.TEXT_NODE)return o.textContent||""}return t.textContent||""}return""}catch(e){return this.settings?.debugMode&&console.log("TextBlitz: Error getting text before cursor, will try expansion anyway:",e),""}}async checkForMatch(t){const e=this.getTextBeforeCursor(t);if(this.settings?.debugMode&&console.log("TextBlitz: Text before cursor:",e),!e)return!1;const s=this.trie.findMatch(e);if(!s)return!1;const{snippet:i}=s,n=this.settings.caseSensitive?i.trigger:i.trigger.toLowerCase();if(!(this.settings.caseSensitive?e:e.toLowerCase()).endsWith(n))return!1;const o=e.substring(0,e.length-n.length);if(!z(o,n,"",i.triggerMode))return!1;if(this.settings?.debugMode&&console.log("TextBlitz: ✅ Trigger matched:",n,"snippet:",i.label),f.hasFormCommands(i.expansion))return await this.expandWithForm(t,i),!0;if(i.type==="dynamic")return await this.expandDynamic(t,i),!0;{this.isExpanding=!0;const l=await g.replace(t,i.trigger,i.expansion,i.caseTransform);return this.isExpanding=!1,l&&h.incrementUsage(i.id).catch(c=>{console.error("TextBlitz: Failed to update usage stats",c)}),l}}async expandWithForm(t,e){this.isExpanding=!0;try{const s=f.extractFormFields(e.expansion);if(s.length===0){console.warn("TextBlitz: No form fields found in expansion");return}await new Promise((i,n)=>{this.formPopup.show(s,async r=>{try{let o=f.substituteFormValues(e.expansion,r);o=await f.processCommands(o),await g.replace(t,e.trigger,o,e.caseTransform)&&h.incrementUsage(e.id).catch(l=>{console.error("TextBlitz: Failed to update usage stats",l)}),i()}catch(o){console.error("TextBlitz: Form expansion failed:",o),n(o)}},()=>{console.log("TextBlitz: Form cancelled by user"),i()})})}catch(s){console.error("TextBlitz: Form popup error:",s)}finally{this.isExpanding=!1}}async expandDynamic(t,e){this.isExpanding=!0;try{const s=e.llmProvider||this.settings.llmDefaultProvider,i=e.llmPrompt;if(!i)throw new Error("No LLM prompt defined for dynamic snippet");const n=await m.complete(s,{prompt:i,maxTokens:this.settings.llmMaxTokens,temperature:.7});await g.replace(t,e.trigger,n.text,e.caseTransform)&&h.incrementUsage(e.id).catch(o=>{console.error("TextBlitz: Failed to update usage stats",o)})}catch(s){console.error("TextBlitz: LLM expansion failed:",s);let i="LLM failed";s instanceof Error&&(s.message.includes("not initialized")||s.message.includes("API key")?i="LLM not configured - add API key in settings":s.message.includes("rate limit")?i="Rate limited - wait a moment":i=`LLM error: ${s.message}`),e.fallbackText?await g.replace(t,e.trigger,e.fallbackText,e.caseTransform):await g.replace(t,e.trigger,`[${i}]`,e.caseTransform)}finally{this.isExpanding=!1}}}console.log("TextBlitz: Content script loaded!");try{new R}catch(d){console.error("TextBlitz: Failed to create expander",d)}})();

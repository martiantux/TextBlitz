const d=class d{static parse(t){const r=[],e=new RegExp(this.COMMAND_REGEX);let s;for(;(s=e.exec(t))!==null;){const[o,a,n]=s;r.push({type:a,options:n?.trim()||void 0,startIndex:s.index,endIndex:s.index+o.length,rawMatch:o})}return r}static parseFormCommands(t){const r=[],e=new RegExp(this.FORM_COMMAND_REGEX);let s;for(;(s=e.exec(t))!==null;){const[o,a,n]=s,c=this.parseFormField(a,n);c&&r.push({type:"form",options:n,startIndex:s.index,endIndex:s.index+o.length,rawMatch:o,formField:c})}return r}static parseFormField(t,r){const e=r.split(";").map(c=>c.trim()),s={};for(const c of e){const[i,u]=c.split("=").map(p=>p.trim());i&&u&&(s[i]=u)}const o=s.label||s.name||"Field",a=s.name||o.toLowerCase().replace(/\s+/g,"_"),n={type:t.replace("form",""),name:a,label:o,required:s.required==="true"};return t==="formmenu"&&s.options&&(n.options=s.options.split(",").map(c=>c.trim())),s.default&&(n.defaultValue=t==="formtoggle"?s.default==="true":s.default),n}static hasFormCommands(t){return this.FORM_COMMAND_REGEX.test(t)}static extractFormFields(t){return this.parseFormCommands(t).map(e=>e.formField).filter(Boolean)}static getOrdinalSuffix(t){if(t>=11&&t<=13)return"th";switch(t%10){case 1:return"st";case 2:return"nd";case 3:return"rd";default:return"th"}}static parseDateShift(t){const r=t.match(/shift\s+([+-]?\d+)([dMY])/);if(!r)return null;const e=parseInt(r[1],10),s=r[2];return{value:e,unit:s}}static applyDateShift(t,r){const e=new Date(t);switch(r.unit){case"d":e.setDate(e.getDate()+r.value);break;case"M":e.setMonth(e.getMonth()+r.value);break;case"Y":e.setFullYear(e.getFullYear()+r.value);break}return e}static formatDate(t,r){let e=t,s=r||"YYYY-MM-DD";if(r){const p=this.parseDateShift(r);p&&(e=this.applyDateShift(t,p),s=r.replace(/\s*shift\s+[+-]?\d+[dMY]\s*/,"").trim()||"YYYY-MM-DD")}const o=e.getFullYear(),a=String(e.getMonth()+1).padStart(2,"0"),n=e.getDate(),c=String(n).padStart(2,"0"),i=e.toLocaleDateString("en-US",{month:"long"}),u=e.toLocaleDateString("en-US",{month:"short"});return s.replace("YYYY",String(o)).replace("YY",String(o).slice(-2)).replace("MMMM",i).replace("MMM",u).replace("Do",`${n}${this.getOrdinalSuffix(n)}`).replace("MM",a).replace("M",String(e.getMonth()+1)).replace("DD",c).replace("D",String(n))}static formatTime(t,r){const s=r||"HH:mm",o=t.getHours(),a=o%12||12,n=String(t.getMinutes()).padStart(2,"0"),c=String(t.getSeconds()).padStart(2,"0"),i=o>=12?"PM":"AM";return s==="12h"?`${a}:${n} ${i}`:s==="24h"?`${String(o).padStart(2,"0")}:${n}`:s.replace("HH",String(o).padStart(2,"0")).replace("H",String(o)).replace("hh",String(a).padStart(2,"0")).replace("h",String(a)).replace("mm",n).replace("ss",c).replace("A",i).replace("a",i.toLowerCase())}static parseDelayMs(t){if(!t)return 0;const r=t.match(/\+?(\d+(?:\.\d+)?)(s|ms)?/);if(!r)return 0;const e=parseFloat(r[1]);return(r[2]||"s")==="ms"?e:e*1e3}static async processCommands(t){const r=this.parse(t);if(r.length===0)return t;let e=t;const s=new Date;for(let o=r.length-1;o>=0;o--){const a=r[o];let n;switch(a.type){case"date":n=this.formatDate(s,a.options);break;case"time":n=this.formatTime(s,a.options);break;case"clipboard":try{n=await navigator.clipboard.readText()}catch{console.warn("TextBlitz: Clipboard access denied or unavailable"),n=a.rawMatch}break;case"cursor":case"enter":case"tab":case"delay":continue;default:n=a.rawMatch}e=e.slice(0,a.startIndex)+n+e.slice(a.endIndex)}return e}static extractKeyboardActions(t){const r=this.parse(t),e=[];let s=t,o=0;for(const a of r)if(a.type==="enter"||a.type==="tab"||a.type==="delay"){const n=a.startIndex-o;e.push({type:a.type,options:a.options,position:n}),s=s.slice(0,a.startIndex-o)+s.slice(a.endIndex-o),o+=a.rawMatch.length}return{text:s,actions:e}}static splitTextByKeyboardActions(t){const e=this.parse(t).filter(n=>n.type==="enter"||n.type==="tab"||n.type==="delay");if(e.length===0)return{chunks:[t],actions:[]};const s=[],o=[];let a=0;for(const n of e)s.push(t.substring(a,n.startIndex)),o.push({type:n.type,options:n.options}),a=n.endIndex;return s.push(t.substring(a)),{chunks:s,actions:o}}static substituteFormValues(t,r){const e=this.parseFormCommands(t);if(e.length===0)return t;let s=t;for(let o=e.length-1;o>=0;o--){const a=e[o];if(a.formField){const n=r[a.formField.name],c=n!==void 0?String(n):"";s=s.slice(0,a.startIndex)+c+s.slice(a.endIndex)}}return s}};d.COMMAND_REGEX=/\{(date|time|clipboard|cursor|enter|tab|delay)(?:[\s:]([^}]+))?\}/g,d.FORM_COMMAND_REGEX=/\{(formtext|formparagraph|formmenu|formdate|formtoggle):([^}]+)\}/g;let m=d;class h{static detectCase(t){if(!t)return"lower";const r=/[a-z]/.test(t),e=/[A-Z]/.test(t);if(!r&&!e)return"lower";if(!r&&e)return"upper";if(r&&!e)return"lower";if(/^[A-Z]/.test(t)){const s=t.split(/\s+/),o=s.filter(a=>/^[A-Z]/.test(a));return o.length>1||s.length>1&&o.length===s.length?"title":"capitalize"}return"mixed"}static transform(t,r,e){switch(r){case"upper":return t.toUpperCase();case"lower":return t.toLowerCase();case"title":return this.toTitleCase(t);case"capitalize":return this.capitalize(t);case"match":return e?this.matchCase(t,e):t;case"none":default:return t}}static toTitleCase(t){return t.split(/(\s+)/).map(r=>/^\s+$/.test(r)?r:r.charAt(0).toUpperCase()+r.slice(1).toLowerCase()).join("")}static capitalize(t){return t&&t.charAt(0).toUpperCase()+t.slice(1).toLowerCase()}static matchCase(t,r){switch(this.detectCase(r)){case"upper":return t.toUpperCase();case"lower":return t.toLowerCase();case"title":return this.toTitleCase(t);case"capitalize":return this.capitalize(t);default:return t}}}console.log("TextBlitz: Offscreen document initialized");chrome.runtime.onMessage.addListener((l,t,r)=>{if(l.type==="PROCESS_SNIPPET")return f(l).then(e=>r({success:!0,...e})).catch(e=>r({success:!1,error:e.message})),!0});async function f(l){const{expansion:t,trigger:r,caseTransform:e}=l;let s=await m.processCommands(t);e&&e!=="none"&&(s=h.transform(s,e,r));const o="{cursor}",a=s.indexOf(o);let n=s.length;a!==-1&&(s=s.slice(0,a)+s.slice(a+o.length),n=a);const{chunks:c,actions:i}=m.splitTextByKeyboardActions(s);return{text:c.join(""),cursorOffset:n,chunks:c,actions:i}}

import{S as l}from"../../chunks/storage.js";import{l as g}from"../../chunks/logger.js";const p="https://YOUR_VERCEL_FUNCTION_URL/api/create-issue";class h{constructor(){this.initialize()}async initialize(){await l.initialize(),await this.loadStatus(),this.setupEventListeners()}async loadStatus(){const e=await l.getSettings(),t=await l.getSnippets(),s=Object.values(t),d=document.getElementById("status"),n=document.getElementById("status-text"),r=document.getElementById("stats");e.enabled?(d?.classList.remove("disabled"),n&&(n.textContent="✓ TextBlitz is active")):(d?.classList.add("disabled"),n&&(n.textContent="✗ TextBlitz is disabled")),r&&(r.textContent=`${s.length} snippet${s.length!==1?"s":""} configured`);const o=document.getElementById("recent-list");if(o){const c=s.filter(i=>i.lastUsed).sort((i,a)=>(a.lastUsed||0)-(i.lastUsed||0)).slice(0,5);c.length===0?o.innerHTML='<div class="empty">No snippets used yet</div>':o.innerHTML=c.map(i=>`
          <div class="recent-item">
            <span class="trigger">${this.escapeHtml(i.trigger)}</span>
            <span class="expansion">→ ${this.escapeHtml(i.expansion.substring(0,30))}${i.expansion.length>30?"...":""}</span>
          </div>
        `).join("")}}setupEventListeners(){document.getElementById("open-options")?.addEventListener("click",()=>{chrome.runtime.openOptionsPage()}),document.getElementById("toggle-enabled")?.addEventListener("click",async()=>{const e=await l.getSettings();e.enabled=!e.enabled,await l.saveSettings(e),await this.loadStatus()}),document.getElementById("report-bug")?.addEventListener("click",()=>{this.showBugReportModal()}),document.getElementById("cancel-bug-report")?.addEventListener("click",()=>{this.hideBugReportModal()}),document.getElementById("submit-bug-report")?.addEventListener("click",()=>{this.submitBugReport()}),document.getElementById("bug-include-logs")?.addEventListener("change",e=>{const t=e.target,s=document.getElementById("log-preview");s&&(s.style.display=t.checked?"block":"none")})}showBugReportModal(){document.getElementById("bug-report-modal")?.classList.add("active"),this.loadLogPreview(),document.getElementById("bug-what-happened").value="",document.getElementById("bug-what-doing").value="",document.getElementById("bug-include-logs").checked=!0,document.getElementById("bug-include-snippet").checked=!1;const t=document.getElementById("bug-status");t&&(t.style.display="none",t.className="status-message")}hideBugReportModal(){document.getElementById("bug-report-modal")?.classList.remove("active")}loadLogPreview(){const e=document.getElementById("log-preview");if(!e)return;const t=g.getLogsPreview();e.textContent=t}async submitBugReport(){const e=document.getElementById("bug-what-happened").value.trim(),t=document.getElementById("bug-what-doing").value.trim();document.getElementById("bug-include-logs").checked;const s=document.getElementById("bug-include-snippet").checked;document.getElementById("bug-status");const d=document.getElementById("submit-bug-report");if(!e||!t){this.showStatus("error","Please fill in both description fields");return}try{d.disabled=!0,this.showStatus("error","⏳ Submitting bug report...");let n=`## User Description

`;n+=`**What happened:** ${e}

`,n+=`**What were you doing:** ${t}

`,n+=`---

`;let r=null;if(s){const i=await l.getSnippets(),a=Object.values(i).filter(u=>u.lastUsed).sort((u,m)=>(m.lastUsed||0)-(u.lastUsed||0));a.length>0&&(r={trigger:a[0].trigger,label:a[0].label,expansion:a[0].expansion,type:a[0].type})}n+=g.formatForGitHub(s,r);const o=await fetch(p,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({title:`Bug: ${e.substring(0,60)}...`,body:n})});if(!o.ok)throw new Error(`Server returned ${o.status}`);const c=await o.json();this.showStatus("success",`✅ Bug report submitted! Issue #${c.issueNumber||"created"}`),setTimeout(()=>{this.hideBugReportModal()},2e3)}catch(n){console.error("Bug report submission failed:",n),this.showStatus("error",`❌ Failed to submit: ${n instanceof Error?n.message:"Unknown error"}. You can report directly at github.com/martiantux/TextBlitz/issues`)}finally{d.disabled=!1}}showStatus(e,t){const s=document.getElementById("bug-status");s&&(s.className=`status-message ${e}`,s.textContent=t,s.style.display="block")}escapeHtml(e){const t=document.createElement("div");return t.textContent=e,t.innerHTML}}new h;

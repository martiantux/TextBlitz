const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["chunks/replacer.js","chunks/case-transform.js"])))=>i.map(i=>d[i]);
import{S as m}from"../../chunks/storage.js";const $="modulepreload",F=function(b){return"/"+b},M={},x=function(e,t,n){let s=Promise.resolve();if(t&&t.length>0){let l=function(c){return Promise.all(c.map(d=>Promise.resolve(d).then(u=>({status:"fulfilled",value:u}),u=>({status:"rejected",reason:u}))))};document.getElementsByTagName("link");const a=document.querySelector("meta[property=csp-nonce]"),i=a?.nonce||a?.getAttribute("nonce");s=l(t.map(c=>{if(c=F(c),c in M)return;M[c]=!0;const d=c.endsWith(".css"),u=d?'[rel="stylesheet"]':"";if(document.querySelector(`link[href="${c}"]${u}`))return;const p=document.createElement("link");if(p.rel=d?"stylesheet":$,d||(p.as="script"),p.crossOrigin="",p.href=c,i&&p.setAttribute("nonce",i),document.head.appendChild(p),d)return new Promise((r,h)=>{p.addEventListener("load",r),p.addEventListener("error",()=>h(new Error(`Unable to preload CSS for ${c}`)))})}))}function o(a){const i=new Event("vite:preloadError",{cancelable:!0});if(i.payload=a,window.dispatchEvent(i),!i.defaultPrevented)throw a}return s.then(a=>{for(const i of a||[])i.status==="rejected"&&o(i.reason);return e().catch(o)})};class I{constructor(e){this.config=e}}class q extends I{constructor(){super(...arguments),this.baseURL="https://api.groq.com/openai/v1",this.model="llama-3.1-8b-instant"}async complete(e){const t=this.config.timeout||5e3,n=new AbortController,s=setTimeout(()=>n.abort(),t);try{const o=this.config.systemPrompt||"You are a text completion assistant. Output clean, paste-ready text with no quotes, markdown formatting, or explanations. Generate natural variations of the requested content. Keep responses under 50 words unless explicitly asked for more. Never ask questions back or include placeholders like [brackets]. Output only the exact text the user needs.",a=await fetch(`${this.baseURL}/chat/completions`,{method:"POST",headers:{Authorization:`Bearer ${this.config.apiKey}`,"Content-Type":"application/json"},body:JSON.stringify({model:this.config.model||this.model,messages:[{role:"system",content:o},{role:"user",content:e.prompt}],max_tokens:e.maxTokens||100,temperature:e.temperature||.7}),signal:n.signal});if(clearTimeout(s),!a.ok){const d=await a.text();throw new Error(`Groq API error: ${a.status} - ${d}`)}const i=await a.json();if(!i.choices||i.choices.length===0)throw new Error("No response from Groq");const l=i.choices[0].message.content.trim(),c=i.usage||{prompt_tokens:0,completion_tokens:0,total_tokens:0};return{text:l,tokensUsed:{input:c.prompt_tokens,output:c.completion_tokens,total:c.total_tokens},model:i.model||this.model,provider:"groq"}}catch(o){throw clearTimeout(s),o.name==="AbortError"?new Error("Groq request timed out"):o}}async testConnection(){try{return await this.complete({prompt:'Say "test" and nothing else',maxTokens:10}),!0}catch{return!1}}getModelName(){return this.config.model||this.model}}class O extends I{constructor(){super(...arguments),this.baseURL="https://api.anthropic.com/v1",this.model="claude-sonnet-4-20250514",this.apiVersion="2023-06-01"}async complete(e){const t=this.config.timeout||5e3,n=new AbortController,s=setTimeout(()=>n.abort(),t);try{const o=this.config.systemPrompt||"You are a text completion assistant. Output clean, paste-ready text with no quotes, markdown formatting, or explanations. Generate natural variations of the requested content. Keep responses under 50 words unless explicitly asked for more. Never ask questions back or include placeholders like [brackets]. Output only the exact text the user needs.",a=await fetch(`${this.baseURL}/messages`,{method:"POST",headers:{"x-api-key":this.config.apiKey,"anthropic-version":this.apiVersion,"content-type":"application/json"},body:JSON.stringify({model:this.config.model||this.model,max_tokens:e.maxTokens||100,messages:[{role:"user",content:`${o}

${e.prompt}`}],temperature:e.temperature||.7}),signal:n.signal});if(clearTimeout(s),!a.ok){const d=await a.text();throw new Error(`Anthropic API error: ${a.status} - ${d}`)}const i=await a.json();if(!i.content||i.content.length===0)throw new Error("No response from Anthropic");const l=i.content[0].text.trim(),c=i.usage||{input_tokens:0,output_tokens:0};return{text:l,tokensUsed:{input:c.input_tokens,output:c.output_tokens,total:c.input_tokens+c.output_tokens},model:i.model||this.model,provider:"anthropic"}}catch(o){throw clearTimeout(s),o.name==="AbortError"?new Error("Anthropic request timed out"):o}}async testConnection(){try{return await this.complete({prompt:'Say "test" and nothing else',maxTokens:10}),!0}catch{return!1}}getModelName(){return this.config.model||this.model}}class R extends I{constructor(){super(...arguments),this.baseURL="https://api.openai.com/v1",this.model="gpt-4o-mini"}async complete(e){const t=this.config.timeout||5e3,n=new AbortController,s=setTimeout(()=>n.abort(),t);try{const o=this.config.systemPrompt||"You are a text completion assistant. Output clean, paste-ready text with no quotes, markdown formatting, or explanations. Generate natural variations of the requested content. Keep responses under 50 words unless explicitly asked for more. Never ask questions back or include placeholders like [brackets]. Output only the exact text the user needs.",a=await fetch(`${this.baseURL}/chat/completions`,{method:"POST",headers:{Authorization:`Bearer ${this.config.apiKey}`,"Content-Type":"application/json"},body:JSON.stringify({model:this.config.model||this.model,messages:[{role:"system",content:o},{role:"user",content:e.prompt}],max_tokens:e.maxTokens||100,temperature:e.temperature||.7}),signal:n.signal});if(clearTimeout(s),!a.ok){const d=await a.text();throw new Error(`OpenAI API error: ${a.status} - ${d}`)}const i=await a.json();if(!i.choices||i.choices.length===0)throw new Error("No response from OpenAI");const l=i.choices[0].message.content.trim(),c=i.usage||{prompt_tokens:0,completion_tokens:0,total_tokens:0};return{text:l,tokensUsed:{input:c.prompt_tokens,output:c.completion_tokens,total:c.total_tokens},model:i.model||this.model,provider:"openai"}}catch(o){throw clearTimeout(s),o.name==="AbortError"?new Error("OpenAI request timed out"):o}}async testConnection(){try{return await this.complete({prompt:'Say "test" and nothing else',maxTokens:10}),!0}catch{return!1}}getModelName(){return this.config.model||this.model}}class N extends I{constructor(){super(...arguments),this.baseURL="https://generativelanguage.googleapis.com/v1beta",this.model="gemini-1.5-flash"}async complete(e){const t=this.config.timeout||5e3,n=new AbortController,s=setTimeout(()=>n.abort(),t);try{const o=this.config.systemPrompt||"You are a text completion assistant. Output clean, paste-ready text with no quotes, markdown formatting, or explanations. Generate natural variations of the requested content. Keep responses under 50 words unless explicitly asked for more. Never ask questions back or include placeholders like [brackets]. Output only the exact text the user needs.",a=this.config.model||this.model,i=await fetch(`${this.baseURL}/models/${a}:generateContent?key=${this.config.apiKey}`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({contents:[{parts:[{text:`${o}

${e.prompt}`}]}],generationConfig:{maxOutputTokens:e.maxTokens||100,temperature:e.temperature||.7}}),signal:n.signal});if(clearTimeout(s),!i.ok){const h=await i.text();throw new Error(`Gemini API error: ${i.status} - ${h}`)}const l=await i.json();if(!l.candidates||l.candidates.length===0)throw new Error("No response from Gemini");const c=l.candidates[0];if(!c.content||!c.content.parts||c.content.parts.length===0)throw new Error("Invalid response structure from Gemini");const d=c.content.parts[0].text.trim(),u=l.usageMetadata||{},p=u.promptTokenCount||0,r=u.candidatesTokenCount||0;return{text:d,tokensUsed:{input:p,output:r,total:p+r},model:a,provider:"gemini"}}catch(o){throw clearTimeout(s),o.name==="AbortError"?new Error("Gemini request timed out"):o}}async testConnection(){try{return await this.complete({prompt:'Say "test" and nothing else',maxTokens:10}),!0}catch{return!1}}getModelName(){return this.config.model||this.model}}const U={groq:{free:{requestsPerMinute:30,requestsPerDay:14400},paid:{requestsPerMinute:300,requestsPerDay:144e3}},openai:{tier1:{requestsPerMinute:500,tokensPerMinute:3e4},tier2:{requestsPerMinute:5e3,tokensPerMinute:45e4},tier3:{requestsPerMinute:5e3,tokensPerMinute:2e6},tier4:{requestsPerMinute:1e4,tokensPerMinute:4e6},tier5:{requestsPerMinute:1e4,tokensPerMinute:2e7}},anthropic:{tier1:{requestsPerMinute:50,tokensPerMinute:4e4},tier2:{requestsPerMinute:1e3,tokensPerMinute:8e4},tier3:{requestsPerMinute:2e3,tokensPerMinute:16e4},tier4:{requestsPerMinute:4e3,tokensPerMinute:4e5}},gemini:{free:{requestsPerMinute:15},paid:{requestsPerMinute:1500}}},_={"llama-3.3-70b-versatile":{input:.59,output:.79},"llama-3.1-8b-instant":{input:.05,output:.08},"gpt-4o-mini":{input:.15,output:.6},"gpt-4o":{input:2.5,output:10},"claude-sonnet-4-20250514":{input:3,output:15},"claude-opus-4-20250514":{input:15,output:75},"gemini-2.0-flash-exp":{input:0,output:0},"gemini-2.5-pro":{input:1.25,output:5}};function L(b,e){const t=U[b];return t[e]||t[Object.keys(t)[0]]}function H(b){return _[b]||{input:0,output:0}}class j{constructor(){this.stats=new Map,this.loadStats()}async loadStats(){try{const e=await chrome.storage.local.get("llmUsage");if(e.llmUsage)for(const t of["groq","anthropic","openai","gemini"]){const n=e.llmUsage[t];n&&this.stats.set(t,n)}}catch(e){console.error("Failed to load LLM usage stats:",e)}}async saveStats(){try{const e={};for(const t of["groq","anthropic","openai","gemini"])this.stats.has(t)&&(e[t]=this.stats.get(t));await chrome.storage.local.set({llmUsage:e})}catch(e){console.error("Failed to save LLM usage stats:",e)}}async getOrCreateStats(e){if(!this.stats.has(e)){const n=(await m.getSettings()).llmModels[e]||"";this.stats.set(e,{provider:e,model:n,requests:0,tokensInput:0,tokensOutput:0,tokensTotal:0,estimatedCost:0,lastReset:Date.now(),requestsThisMinute:0,minuteWindowStart:Date.now()})}return this.stats.get(e)}async canMakeRequest(e){const t=await this.getOrCreateStats(e),n=await m.getSettings(),s=Date.now();s-t.minuteWindowStart>6e4&&(t.requestsThisMinute=0,t.minuteWindowStart=s);let o;if(n.llmCustomLimits?.[e]?.requestsPerMinute)o=n.llmCustomLimits[e].requestsPerMinute;else{const a=n.llmTiers[e]||this.getDefaultTier(e);o=L(e,a).requestsPerMinute}return t.requestsThisMinute<o}async trackRequest(e){const t=await this.getOrCreateStats(e.provider),n=Date.now();n-t.minuteWindowStart>6e4&&(t.requestsThisMinute=0,t.minuteWindowStart=n),t.requests++,t.requestsThisMinute++,t.tokensInput+=e.tokensUsed.input,t.tokensOutput+=e.tokensUsed.output,t.tokensTotal+=e.tokensUsed.total,t.model=e.model;const s=H(e.model),o=e.tokensUsed.input/1e6*s.input,a=e.tokensUsed.output/1e6*s.output;t.estimatedCost+=o+a,await this.saveStats()}async getStats(e){return await this.getOrCreateStats(e)}async getAllStats(){return{groq:await this.getOrCreateStats("groq"),anthropic:await this.getOrCreateStats("anthropic"),openai:await this.getOrCreateStats("openai"),gemini:await this.getOrCreateStats("gemini")}}async resetStats(e){const t=await this.getOrCreateStats(e),s=(await m.getSettings()).llmModels[e]||"";t.model=s,t.requests=0,t.tokensInput=0,t.tokensOutput=0,t.tokensTotal=0,t.estimatedCost=0,t.lastReset=Date.now(),t.requestsThisMinute=0,t.minuteWindowStart=Date.now(),await this.saveStats()}async resetAllStats(){for(const e of["groq","anthropic","openai","gemini"])await this.resetStats(e)}async isApproachingLimit(e,t=80){const n=await this.getOrCreateStats(e),s=await m.getSettings();let o;if(s.llmCustomLimits?.[e]?.requestsPerMinute)o=s.llmCustomLimits[e].requestsPerMinute;else{const a=s.llmTiers[e]||this.getDefaultTier(e);o=L(e,a).requestsPerMinute}return n.requestsThisMinute>=o*(t/100)}async getRateLimit(e){const t=await m.getSettings();if(t.llmCustomLimits?.[e])return t.llmCustomLimits[e];const n=t.llmTiers[e]||this.getDefaultTier(e);return L(e,n)}getDefaultTier(e){return{groq:"free",openai:"tier1",anthropic:"tier1",gemini:"free"}[e]}}class z{constructor(){this.providers=new Map,this.usageTracker=new j}setProvider(e,t,n,s,o){let a;const i={apiKey:t,model:n,timeout:s,systemPrompt:o};switch(e){case"groq":a=new q(i);break;case"anthropic":a=new O(i);break;case"openai":a=new R(i);break;case"gemini":a=new N(i);break;default:throw new Error(`Unknown provider: ${e}`)}this.providers.set(e,a)}async complete(e,t){const n=this.providers.get(e);if(!n)throw new Error(`Provider ${e} not initialized. Please add an API key in settings.`);if(!await this.usageTracker.canMakeRequest(e))throw new Error(`Rate limit exceeded for ${e}. Please wait a minute.`);await this.usageTracker.isApproachingLimit(e)&&console.warn(`TextBlitz: Approaching rate limit for ${e}`);const s=await n.complete(t);return await this.usageTracker.trackRequest(s),s}async testConnection(e){const t=this.providers.get(e);return t?t.testConnection():!1}getUsageTracker(){return this.usageTracker}}const E=new z,B=[{id:"essential-communication",name:"💬 Essential Communication",description:"Professional and personal communication templates that work everywhere",icon:"💬",author:"TextBlitz",version:"1.0.0",tags:["communication","professional","personal","beginner"],snippets:[{id:"comm-thanks",label:"Thank You",trigger:"thx",expansion:"Thank you for your help!",caseSensitive:!1,enabled:!0,triggerMode:"word",createdAt:Date.now(),usageCount:0,type:"static"},{id:"comm-followup",label:"Follow Up",trigger:"fup",expansion:`Hi {formtext: name=Name; default=there},

Just following up on {formtext: name=Subject; required=true}.

Let me know if you need any additional information.

Best regards`,caseSensitive:!1,enabled:!0,triggerMode:"word",createdAt:Date.now(),usageCount:0,type:"static"},{id:"comm-meeting",label:"Meeting Confirmation",trigger:"meetconfirm",expansion:`Confirmed: Meeting on {date:MMMM Do} at {time:h:mm A}.

Location/Link: {formtext: name=Location}

Agenda: {formtext: name=Agenda}`,caseSensitive:!1,enabled:!0,triggerMode:"word",createdAt:Date.now(),usageCount:0,type:"static"},{id:"comm-ooo",label:"Out of Office",trigger:"ooo",expansion:`I'm currently out of office and will return on {formdate: label=Return Date}.

For urgent matters, please contact {formtext: name=Backup Contact}.

I'll respond to your message when I return.`,caseSensitive:!1,enabled:!0,triggerMode:"word",createdAt:Date.now(),usageCount:0,type:"static"},{id:"comm-apology",label:"Professional Apology",trigger:"apologize",expansion:`I apologize for {formtext: name=Issue}. {formparagraph: name=Explanation}

To resolve this: {formparagraph: name=Solution}

Thank you for your patience.`,caseSensitive:!1,enabled:!0,triggerMode:"word",createdAt:Date.now(),usageCount:0,type:"static"}],createdAt:Date.now(),updatedAt:Date.now()},{id:"developer-essentials",name:"🧑‍💻 Developer Essentials",description:"Code snippets, git messages, debugging templates, and common dev workflows",icon:"🧑‍💻",author:"TextBlitz",version:"1.0.0",tags:["developer","programming","git","code"],compatibleWith:["customer-service-pro"],snippets:[{id:"dev-arrow",label:"Arrow Function",trigger:"arrow",expansion:"() => {}",caseSensitive:!1,enabled:!0,triggerMode:"word",createdAt:Date.now(),usageCount:0,type:"static"},{id:"dev-console",label:"Console Log",trigger:"clog",expansion:"console.log('{cursor}');",caseSensitive:!1,enabled:!0,triggerMode:"word",createdAt:Date.now(),usageCount:0,type:"static"},{id:"dev-gitfix",label:"Git Fix Commit",trigger:"gitfix",expansion:"fix: {formtext: name=Description; required=true}",caseSensitive:!1,enabled:!0,triggerMode:"word",createdAt:Date.now(),usageCount:0,type:"static"},{id:"dev-gitfeat",label:"Git Feature Commit",trigger:"gitfeat",expansion:"feat: {formtext: name=Description; required=true}",caseSensitive:!1,enabled:!0,triggerMode:"word",createdAt:Date.now(),usageCount:0,type:"static"},{id:"dev-todo",label:"TODO Comment",trigger:"todoc",expansion:"// TODO: {cursor}",caseSensitive:!1,enabled:!0,triggerMode:"word",createdAt:Date.now(),usageCount:0,type:"static"},{id:"dev-fixme",label:"FIXME Comment",trigger:"fixmec",expansion:"// FIXME: {cursor}",caseSensitive:!1,enabled:!0,triggerMode:"word",createdAt:Date.now(),usageCount:0,type:"static"},{id:"dev-async",label:"Async Function",trigger:"asyncfn",expansion:`async () => {
  {cursor}
}`,caseSensitive:!1,enabled:!0,triggerMode:"word",createdAt:Date.now(),usageCount:0,type:"static"},{id:"dev-trycatch",label:"Try Catch Block",trigger:"tryc",expansion:`try {
  {cursor}
} catch (error) {
  console.error(error);
}`,caseSensitive:!1,enabled:!0,triggerMode:"word",createdAt:Date.now(),usageCount:0,type:"static"},{id:"dev-pr",label:"Pull Request Description",trigger:"prdesc",expansion:`## Summary
{formparagraph: name=What changed?}

## Why
{formparagraph: name=Why this change?}

## Testing
- [ ] {formtext: name=Test 1}
- [ ] {formtext: name=Test 2}

## Screenshots
{formtext: name=Screenshot URL (optional)}`,caseSensitive:!1,enabled:!0,triggerMode:"word",createdAt:Date.now(),usageCount:0,type:"static"}],folders:[{id:"dev-git",name:"Git",icon:"🔧",order:0},{id:"dev-code",name:"Code Snippets",icon:"💻",order:1}],createdAt:Date.now(),updatedAt:Date.now()},{id:"customer-service-pro",name:"📧 Customer Service Pro",description:"Empathy-driven responses, de-escalation, and professional customer support templates",icon:"📧",author:"TextBlitz",version:"1.0.0",tags:["customer-service","support","empathy","professional"],snippets:[{id:"cs-empathy",label:"Empathy Opening",trigger:"csempathy",expansion:"I understand how {formmenu: label=Emotion; options=frustrating,disappointing,concerning,inconvenient} this must be for you.",caseSensitive:!1,enabled:!0,triggerMode:"word",createdAt:Date.now(),usageCount:0,type:"static"},{id:"cs-investigating",label:"Investigating Issue",trigger:"csinvest",expansion:"Thank you for bringing this to our attention. I'm looking into {formtext: name=Issue} right now and will have an update for you within {formtext: name=Timeframe; default=24 hours}.",caseSensitive:!1,enabled:!0,triggerMode:"word",createdAt:Date.now(),usageCount:0,type:"static"},{id:"cs-escalate",label:"Escalation",trigger:"csescalate",expansion:"I want to make sure you receive the best possible resolution. I'm escalating this to {formtext: name=Team/Person} who specializes in {formtext: name=Issue Type}. They'll reach out within {formtext: name=Timeframe; default=24 hours}.",caseSensitive:!1,enabled:!0,triggerMode:"word",createdAt:Date.now(),usageCount:0,type:"static"},{id:"cs-refund",label:"Refund Process",trigger:"csrefund",expansion:"I've processed a {formmenu: label=Type; options=full refund,partial refund,store credit} of {formtext: name=Amount}. You should see this reflected in your account within {formtext: name=Timeframe; default=5-7 business days}.",caseSensitive:!1,enabled:!0,triggerMode:"word",createdAt:Date.now(),usageCount:0,type:"static"},{id:"cs-followup",label:"Resolution Follow-up",trigger:"csfollowup",expansion:"I wanted to follow up and make sure {formtext: name=Issue} has been resolved to your satisfaction. Is there anything else I can help you with?",caseSensitive:!1,enabled:!0,triggerMode:"word",createdAt:Date.now(),usageCount:0,type:"static"},{id:"cs-delay",label:"Delay Explanation",trigger:"csdelay",expansion:`I apologize for the delay with {formtext: name=Issue}. {formparagraph: name=Explanation}

Expected resolution: {formtext: name=Timeline}

I'll keep you updated on progress.`,caseSensitive:!1,enabled:!0,triggerMode:"word",createdAt:Date.now(),usageCount:0,type:"static"}],createdAt:Date.now(),updatedAt:Date.now()}];class K{static async checkConflicts(e,t){const n=await m.getSnippets(),s=[],o=t?e.snippets.filter(a=>t.includes(a.id)):e.snippets;for(const a of o)for(const[i,l]of Object.entries(n))l.trigger.toLowerCase()===a.trigger.toLowerCase()&&s.push({packSnippetId:a.id,existingSnippetId:i,trigger:a.trigger});return s}static async installPack(e,t){const n=await m.getSnippets();let s=t.mode==="selected"&&t.selectedSnippetIds?e.snippets.filter(p=>t.selectedSnippetIds.includes(p.id)):e.snippets,o=0,a=0;const i=[];let l;if(t.createFolder){const p=await m.getSettings(),r=p.customFolders||[],h=r.find(f=>f.name===e.name);if(h)l=h.id;else{l=`pack-${e.id}`;const f={id:l,name:e.name,icon:e.icon,order:r.length};r.push(f),p.customFolders=r,await m.saveSettings(p)}}for(const p of s){if(Object.values(n).some(f=>f.trigger.toLowerCase()===p.trigger.toLowerCase())){if(t.conflictResolution==="skip"){a++;continue}else if(t.conflictResolution==="rename")p.trigger=`${p.trigger}_${e.id.substring(0,3)}`;else if(t.conflictResolution==="replace"){const f=Object.entries(n).find(([v,w])=>w.trigger.toLowerCase()===p.trigger.toLowerCase())?.[0];f&&await m.deleteSnippet(f)}}const h={...p,id:`${e.id}-${p.id}-${Date.now()}`,folder:l||p.folder,createdAt:Date.now(),usageCount:0};await m.saveSnippet(h),i.push(h.id),o++}const c={packId:e.id,version:e.version,installedAt:Date.now(),enabled:!0,snippetIds:i},u=(await m.exportData()).installedPacks||{};return u[e.id]=c,await chrome.storage.local.set({installedPacks:u}),{success:!0,installedCount:o,skippedCount:a}}static async getInstalledPacks(){return(await chrome.storage.local.get(["installedPacks"])).installedPacks||{}}static async uninstallPack(e){const t=await this.getInstalledPacks(),n=t[e];if(!n)return!1;for(const s of n.snippetIds)try{await m.deleteSnippet(s)}catch(o){console.warn(`Failed to delete snippet ${s}:`,o)}return delete t[e],await chrome.storage.local.set({installedPacks:t}),!0}static async exportAsPack(e,t,n,s,o,a){const i=await m.getSnippets(),l=o.map(d=>i[d]).filter(d=>d!==void 0);return{id:`custom-${Date.now()}`,name:e,description:t,icon:n,author:s,version:"1.0.0",tags:a,snippets:l,createdAt:Date.now(),updatedAt:Date.now()}}static downloadPack(e){const t=JSON.stringify(e,null,2),n=new Blob([t],{type:"application/json"}),s=URL.createObjectURL(n),o=document.createElement("a");o.href=s,o.download=`${e.id}-v${e.version}.json`,o.click(),URL.revokeObjectURL(s)}static async importPackFromFile(e){return new Promise((t,n)=>{const s=new FileReader;s.onload=o=>{try{const a=JSON.parse(o.target?.result);if(!a.id||!a.name||!a.snippets||!Array.isArray(a.snippets)){n(new Error("Invalid pack file format"));return}t(a)}catch{n(new Error("Failed to parse pack file"))}},s.onerror=()=>n(new Error("Failed to read file")),s.readAsText(e)})}}class G{constructor(e,t=""){this.commandMenu=null;const n=document.getElementById(e);if(!n)throw new Error(`Container element #${e} not found`);this.container=n,this.toolbar=this.createToolbar(),this.editor=this.createEditor(t),this.container.appendChild(this.toolbar),this.container.appendChild(this.editor),this.setupEventListeners()}createToolbar(){const e=document.createElement("div");e.className="wysiwyg-toolbar";const t=this.createFormatButtons(),n=this.createFontSizeSelector(),s=this.createDivider(),o=this.createInsertCommandButton();return e.appendChild(t),e.appendChild(n),e.appendChild(s),e.appendChild(o),e}createFormatButtons(){const e=document.createElement("div");return e.className="wysiwyg-button-group",[{label:"B",command:"bold",title:"Bold (Ctrl+B)",style:"font-weight: bold;"},{label:"I",command:"italic",title:"Italic (Ctrl+I)",style:"font-style: italic;"},{label:"U",command:"underline",title:"Underline (Ctrl+U)",style:"text-decoration: underline;"},{label:"S",command:"strikeThrough",title:"Strikethrough",style:"text-decoration: line-through;"}].forEach(n=>{const s=document.createElement("button");s.type="button",s.className="wysiwyg-btn",s.innerHTML=`<span style="${n.style}">${n.label}</span>`,s.title=n.title,s.setAttribute("data-command",n.command),s.addEventListener("click",o=>{o.preventDefault(),document.execCommand(n.command,!1),this.editor.focus(),this.updateToolbarState()}),e.appendChild(s)}),e}createFontSizeSelector(){const e=document.createElement("select");return e.className="wysiwyg-font-select",e.title="Font size",[{label:"Small",value:"1"},{label:"Normal",value:"3"},{label:"Large",value:"5"},{label:"Huge",value:"7"}].forEach(n=>{const s=document.createElement("option");s.value=n.value,s.textContent=n.label,n.value==="3"&&(s.selected=!0),e.appendChild(s)}),e.addEventListener("change",n=>{const s=n.target.value;document.execCommand("fontSize",!1,s),this.editor.focus()}),e}createInsertCommandButton(){const e=document.createElement("div");e.className="command-dropdown-container",e.style.position="relative";const t=document.createElement("button");t.type="button",t.className="wysiwyg-insert-cmd-btn",t.innerHTML="+ Insert Command",t.title="Insert dynamic command";const n=document.createElement("div");return n.className="command-dropdown-menu",n.style.display="none",n.innerHTML=`
      <div class="command-category">
        <div class="command-category-title">Basic Commands</div>
        <button type="button" class="command-menu-item" data-cmd="date">
          <span class="cmd-icon">📅</span>
          <div>
            <div class="cmd-name">Date/Time</div>
            <div class="cmd-desc">Insert current date</div>
          </div>
        </button>
        <button type="button" class="command-menu-item" data-cmd="time">
          <span class="cmd-icon">🕐</span>
          <div>
            <div class="cmd-name">Time</div>
            <div class="cmd-desc">Insert current time</div>
          </div>
        </button>
        <button type="button" class="command-menu-item" data-cmd="clipboard">
          <span class="cmd-icon">📋</span>
          <div>
            <div class="cmd-name">Clipboard</div>
            <div class="cmd-desc">Insert clipboard content</div>
          </div>
        </button>
        <button type="button" class="command-menu-item" data-cmd="cursor">
          <span class="cmd-icon">|</span>
          <div>
            <div class="cmd-name">Cursor</div>
            <div class="cmd-desc">Set cursor position</div>
          </div>
        </button>
      </div>
      <div class="command-category">
        <div class="command-category-title">Keyboard</div>
        <button type="button" class="command-menu-item" data-cmd="enter">
          <span class="cmd-icon">⏎</span>
          <div>
            <div class="cmd-name">Enter</div>
            <div class="cmd-desc">Press Enter key</div>
          </div>
        </button>
        <button type="button" class="command-menu-item" data-cmd="tab">
          <span class="cmd-icon">⇥</span>
          <div>
            <div class="cmd-name">Tab</div>
            <div class="cmd-desc">Press Tab key</div>
          </div>
        </button>
        <button type="button" class="command-menu-item" data-cmd="delay">
          <span class="cmd-icon">⏱️</span>
          <div>
            <div class="cmd-name">Delay</div>
            <div class="cmd-desc">Pause before continuing</div>
          </div>
        </button>
      </div>
      <div class="command-category">
        <div class="command-category-title">Forms</div>
        <button type="button" class="command-menu-item" data-cmd="formtext">
          <span class="cmd-icon">📝</span>
          <div>
            <div class="cmd-name">Text Field</div>
            <div class="cmd-desc">Single line input</div>
          </div>
        </button>
        <button type="button" class="command-menu-item" data-cmd="formlist">
          <span class="cmd-icon">📋</span>
          <div>
            <div class="cmd-name">Dropdown</div>
            <div class="cmd-desc">Select from options</div>
          </div>
        </button>
      </div>
    `,t.addEventListener("click",s=>{s.preventDefault(),s.stopPropagation();const o=n.style.display==="block";n.style.display=o?"none":"block"}),n.querySelectorAll(".command-menu-item").forEach(s=>{s.addEventListener("click",o=>{o.preventDefault();const a=o.currentTarget.getAttribute("data-cmd");a&&(this.insertCommand(a),n.style.display="none")})}),document.addEventListener("click",s=>{e.contains(s.target)||(n.style.display="none")}),e.appendChild(t),e.appendChild(n),this.commandMenu=n,e}createDivider(){const e=document.createElement("div");return e.className="wysiwyg-divider",e}createEditor(e){const t=document.createElement("div");return t.className="wysiwyg-editor",t.contentEditable="true",t.setAttribute("spellcheck","true"),t.setAttribute("data-placeholder","Type your snippet expansion here..."),t.innerHTML=this.textToHtml(e),t}setupEventListeners(){this.editor.addEventListener("input",()=>{this.onChangeCallback&&this.onChangeCallback(this.getContent())}),this.editor.addEventListener("mouseup",()=>this.updateToolbarState()),this.editor.addEventListener("keyup",()=>this.updateToolbarState()),this.editor.addEventListener("focus",()=>this.updateToolbarState()),this.editor.addEventListener("keydown",e=>{if(e.ctrlKey||e.metaKey)switch(e.key.toLowerCase()){case"b":e.preventDefault(),document.execCommand("bold"),this.updateToolbarState();break;case"i":e.preventDefault(),document.execCommand("italic"),this.updateToolbarState();break;case"u":e.preventDefault(),document.execCommand("underline"),this.updateToolbarState();break}}),this.setupDragAndDrop()}setupDragAndDrop(){let e=null;this.editor.addEventListener("dragstart",t=>{const n=t.target;n.classList.contains("command-pill")&&(e=n,n.classList.add("dragging"),t.dataTransfer.effectAllowed="move",t.dataTransfer.setData("text/html",n.outerHTML))}),this.editor.addEventListener("dragend",t=>{const n=t.target;n.classList.contains("command-pill")&&(n.classList.remove("dragging"),e=null)}),this.editor.addEventListener("dragover",t=>{t.preventDefault(),t.dataTransfer.dropEffect="move"}),this.editor.addEventListener("drop",t=>{if(t.preventDefault(),!e)return;const n=document.caretRangeFromPoint(t.clientX,t.clientY);if(n){const s=window.getSelection();s?.removeAllRanges(),s?.addRange(n),e.remove(),n.insertNode(e),n.setStartAfter(e),n.setEndAfter(e),s?.removeAllRanges(),s?.addRange(n),this.onChangeCallback&&this.onChangeCallback(this.getContent())}})}updateToolbarState(){this.toolbar.querySelectorAll(".wysiwyg-btn").forEach(t=>{const n=t,s=n.getAttribute("data-command");if(!s)return;document.queryCommandState(s)?n.classList.add("active"):n.classList.remove("active")})}insertCommand(e){if(e==="delay"){const s=prompt("Enter delay (e.g., 3s for 3 seconds):","3s");s&&this.insertCommandPill(`{delay:${s}}`);return}if(e==="formtext"){const s=prompt("Enter field name:","name"),o=prompt("Enter default value (optional):","");if(s){const a=o?`{formtext: name=${s}; default=${o}}`:`{formtext: name=${s}}`;this.insertCommandPill(a)}return}if(e==="formlist"){const s=prompt("Enter field name:","option"),o=prompt("Enter options (comma-separated):","Option 1, Option 2, Option 3");s&&o&&this.insertCommandPill(`{formlist: name=${s}; options=${o}}`);return}const n={enter:"{enter}",tab:"{tab}",date:"{date}",time:"{time}",clipboard:"{clipboard}",cursor:"{cursor}"}[e];n&&this.insertCommandPill(n)}insertCommandPill(e){const t=document.createElement("span");t.className="command-pill",t.contentEditable="false",t.draggable=!0,t.textContent=e,t.setAttribute("data-command",e);const n=window.getSelection();if(n&&n.rangeCount>0){const s=n.getRangeAt(0);s.deleteContents(),s.insertNode(t);const o=document.createTextNode(" ");s.setStartAfter(t),s.insertNode(o),s.setStartAfter(o),s.setEndAfter(o),n.removeAllRanges(),n.addRange(s)}else this.editor.appendChild(t);this.editor.focus(),this.onChangeCallback&&this.onChangeCallback(this.getContent())}textToHtml(e){if(!e)return"";const t=document.createElement("div");t.textContent=e;let n=t.innerHTML;n=n.replace(/\n/g,"<br>");const s=/\{[^}]+\}/g;return n=n.replace(s,o=>`<span class="command-pill" contenteditable="false" draggable="true" data-command="${this.escapeHtml(o)}">${this.escapeHtml(o)}</span>`),n}htmlToText(e){const t=document.createElement("div");return t.innerHTML=e,t.querySelectorAll(".command-pill").forEach(o=>{const a=o.getAttribute("data-command")||o.textContent||"",i=document.createTextNode(a);o.parentNode?.replaceChild(i,o)}),t.querySelectorAll("br").forEach(o=>{o.parentNode?.replaceChild(document.createTextNode(`
`),o)}),t.textContent||""}escapeHtml(e){const t=document.createElement("div");return t.textContent=e,t.innerHTML}getContent(){return this.htmlToText(this.editor.innerHTML)}setContent(e){this.editor.innerHTML=this.textToHtml(e)}onChange(e){this.onChangeCallback=e}focus(){this.editor.focus()}destroy(){this.container.innerHTML=""}}class W{constructor(){this.currentEditId=null,this.currentEditFolderId=null,this.currentFolder="all",this.searchQuery="",this.sortBy="recent",this.llmSettingsSaveCallback=null,this.currentPack=null,this.wysiwygEditor=null,this.modalMouseDownOnBackground=!1,this.initialize()}async initialize(){await m.initialize(),await this.loadSettings(),await this.renderFolders(),await this.loadSnippets(),this.setupEventListeners(),this.applyTheme()}async loadSettings(){const e=await m.getSettings(),t=document.getElementById("enabled-toggle"),n=document.getElementById("theme-select");t&&(t.checked=e.enabled),n&&(n.value=e.darkMode||"system")}async applyTheme(){const t=(await m.getSettings()).darkMode||"system";let n=t;t==="system"&&(n=window.matchMedia("(prefers-color-scheme: dark)").matches?"dark":"light"),document.documentElement.setAttribute("data-theme",n)}async loadSnippets(){const e=await m.getSnippets(),t=document.getElementById("snippets-grid");if(!t)return;let n=Object.values(e);if(this.currentFolder!=="all"&&(n=n.filter(s=>s.folder===this.currentFolder)),this.searchQuery){const s=this.searchQuery.toLowerCase();n=n.filter(o=>o.label.toLowerCase().includes(s)||o.trigger.toLowerCase().includes(s)||o.expansion.toLowerCase().includes(s))}if(n=this.sortSnippets(n),n.length===0){t.innerHTML=`
        <div class="empty-state">
          <div class="empty-icon">📝</div>
          <div class="empty-title">No snippets found</div>
          <div class="empty-text">${this.searchQuery?"Try a different search term":"Create your first snippet to get started!"}</div>
          <button class="btn btn-primary" onclick="document.getElementById('add-snippet-btn').click()">
            <span>+</span>
            <span>Create Snippet</span>
          </button>
        </div>
      `;return}t.innerHTML=n.map(s=>this.renderSnippetCard(s)).join(""),this.attachSnippetEventListeners()}sortSnippets(e){switch(this.sortBy){case"usage":return e.sort((t,n)=>n.usageCount-t.usageCount);case"alpha":return e.sort((t,n)=>t.label.localeCompare(n.label));case"recent":default:return e.sort((t,n)=>n.createdAt-t.createdAt)}}renderSnippetCard(e){const t=this.getTriggerModeLabel(e.triggerMode),n=e.usageCount>0?`Used ${e.usageCount} ${e.usageCount===1?"time":"times"}`:"Never used";return`
      <div class="snippet-card" data-id="${e.id}">
        <div class="snippet-header">
          <div class="snippet-main">
            <div class="snippet-title">${this.escapeHtml(e.label)}</div>
            <span class="snippet-trigger">${this.escapeHtml(e.trigger)}</span>
          </div>
          <div class="snippet-actions">
            <button class="btn btn-icon btn-secondary duplicate-btn" data-id="${e.id}" title="Duplicate">
              📋
            </button>
            <button class="btn btn-icon btn-secondary edit-btn" data-id="${e.id}" title="Edit">
              ✏️
            </button>
            <button class="btn btn-icon btn-danger delete-btn" data-id="${e.id}" title="Delete">
              🗑️
            </button>
          </div>
        </div>
        <div class="snippet-expansion">${this.escapeHtml(e.expansion)}</div>
        <div class="snippet-meta">
          <span class="snippet-meta-item">
            <span>📊</span>
            <span>${n}</span>
          </span>
          <span class="badge badge-mode">${t}</span>
          ${e.enabled?"":'<span class="badge" style="background: rgba(239, 68, 68, 0.1); color: #ef4444;">Disabled</span>'}
        </div>
      </div>
    `}getTriggerModeLabel(e){switch(e){case"word":return"Word Start";case"word-both":return"Word Both";case"anywhere":return"Anywhere";default:return e}}attachSnippetEventListeners(){document.querySelectorAll(".duplicate-btn").forEach(e=>{e.addEventListener("click",t=>{t.stopPropagation();const n=t.currentTarget.getAttribute("data-id");n&&this.duplicateSnippet(n)})}),document.querySelectorAll(".edit-btn").forEach(e=>{e.addEventListener("click",t=>{t.stopPropagation();const n=t.currentTarget.getAttribute("data-id");n&&this.editSnippet(n)})}),document.querySelectorAll(".delete-btn").forEach(e=>{e.addEventListener("click",t=>{t.stopPropagation();const n=t.currentTarget.getAttribute("data-id");n&&this.deleteSnippet(n)})}),document.querySelectorAll(".snippet-card").forEach(e=>{e.addEventListener("click",t=>{if(t.target.closest(".snippet-actions"))return;const n=t.currentTarget.getAttribute("data-id");n&&this.editSnippet(n)})})}setupEventListeners(){const e=document.getElementById("enabled-toggle");e?.addEventListener("change",async()=>{const r=await m.getSettings();r.enabled=e.checked,await m.saveSettings(r)});const t=document.getElementById("theme-select");t?.addEventListener("change",async()=>{const r=await m.getSettings();r.darkMode=t.value,await m.saveSettings(r),await this.applyTheme()}),document.getElementById("add-snippet-btn")?.addEventListener("click",()=>{window.location.href="../snippet-editor/snippet-editor.html"}),document.getElementById("cancel-snippet-btn")?.addEventListener("click",()=>{this.hideModal()}),document.getElementById("save-snippet-btn")?.addEventListener("click",()=>{this.saveSnippet()});const n=document.getElementById("snippet-modal");n?.addEventListener("mousedown",r=>{this.modalMouseDownOnBackground=r.target===r.currentTarget}),n?.addEventListener("click",r=>{r.target===r.currentTarget&&this.modalMouseDownOnBackground&&this.hideModal(),this.modalMouseDownOnBackground=!1}),document.getElementById("search-input")?.addEventListener("input",r=>{this.searchQuery=r.target.value,this.loadSnippets()}),document.getElementById("sort-select")?.addEventListener("change",r=>{this.sortBy=r.target.value,this.loadSnippets()}),document.querySelectorAll(".folder-item").forEach(r=>{r.addEventListener("click",h=>{const f=h.currentTarget.getAttribute("data-folder");f&&this.switchFolder(f)})}),document.getElementById("export-btn")?.addEventListener("click",()=>{this.exportData()}),document.getElementById("import-btn")?.addEventListener("click",()=>{document.getElementById("import-file-input")?.click()}),document.getElementById("import-file-input")?.addEventListener("change",r=>{const h=r.target.files?.[0];h&&this.importData(h)}),document.getElementById("new-folder-btn")?.addEventListener("click",()=>{this.showFolderModal()}),document.getElementById("cancel-folder-btn")?.addEventListener("click",()=>{this.hideFolderModal()}),document.getElementById("save-folder-btn")?.addEventListener("click",()=>{this.saveFolder()});const a=document.getElementById("folder-modal");a?.addEventListener("mousedown",r=>{this.modalMouseDownOnBackground=r.target===r.currentTarget}),a?.addEventListener("click",r=>{r.target===r.currentTarget&&this.modalMouseDownOnBackground&&this.hideFolderModal(),this.modalMouseDownOnBackground=!1}),document.getElementById("llm-settings-btn")?.addEventListener("click",()=>{this.showLLMSettings()}),document.getElementById("close-llm-settings-btn")?.addEventListener("click",()=>{this.hideLLMSettings()});const i=document.getElementById("llm-settings-modal");i?.addEventListener("mousedown",r=>{this.modalMouseDownOnBackground=r.target===r.currentTarget}),i?.addEventListener("click",r=>{r.target===r.currentTarget&&this.modalMouseDownOnBackground&&this.hideLLMSettings(),this.modalMouseDownOnBackground=!1}),document.getElementById("generate-snippet-btn")?.addEventListener("click",()=>{this.showGenerateSnippet()}),document.getElementById("cancel-generate-btn")?.addEventListener("click",()=>{this.hideGenerateSnippet()}),document.getElementById("generate-btn")?.addEventListener("click",()=>{this.generateSnippet()});const l=document.getElementById("generate-snippet-modal");l?.addEventListener("mousedown",r=>{this.modalMouseDownOnBackground=r.target===r.currentTarget}),l?.addEventListener("click",r=>{r.target===r.currentTarget&&this.modalMouseDownOnBackground&&this.hideGenerateSnippet(),this.modalMouseDownOnBackground=!1}),document.getElementById("snippet-packs-btn")?.addEventListener("click",()=>{this.showSnippetPacks()}),document.getElementById("close-packs-btn")?.addEventListener("click",()=>{this.hideSnippetPacks()});const c=document.getElementById("snippet-packs-modal");c?.addEventListener("mousedown",r=>{this.modalMouseDownOnBackground=r.target===r.currentTarget}),c?.addEventListener("click",r=>{r.target===r.currentTarget&&this.modalMouseDownOnBackground&&this.hideSnippetPacks(),this.modalMouseDownOnBackground=!1}),document.getElementById("cancel-pack-preview-btn")?.addEventListener("click",()=>{this.hidePackPreview(),this.showSnippetPacks()}),document.getElementById("install-pack-btn")?.addEventListener("click",()=>{this.installPack()});const d=document.getElementById("pack-preview-modal");d?.addEventListener("mousedown",r=>{this.modalMouseDownOnBackground=r.target===r.currentTarget}),d?.addEventListener("click",r=>{r.target===r.currentTarget&&this.modalMouseDownOnBackground&&this.hidePackPreview(),this.modalMouseDownOnBackground=!1}),document.getElementById("snippet-type")?.addEventListener("change",()=>{this.toggleSnippetTypeFields()}),document.getElementById("test-area-btn")?.addEventListener("click",()=>{this.showTestArea()}),document.getElementById("close-test-area-btn")?.addEventListener("click",()=>{this.hideTestArea()}),document.getElementById("clear-test-area-btn")?.addEventListener("click",()=>{const r=document.getElementById("test-area-input");r&&(r.value="")});const p=document.getElementById("test-area-modal");p?.addEventListener("mousedown",r=>{this.modalMouseDownOnBackground=r.target===r.currentTarget}),p?.addEventListener("click",r=>{r.target===r.currentTarget&&this.modalMouseDownOnBackground&&this.hideTestArea(),this.modalMouseDownOnBackground=!1}),document.addEventListener("keydown",r=>{r.ctrlKey&&r.shiftKey&&r.key==="S"&&(r.preventDefault(),window.location.href="../snippet-editor/snippet-editor.html")})}showTestArea(){document.getElementById("test-area-modal")?.classList.add("active");const t=document.getElementById("test-area-input");t&&this.setupTestAreaExpander(t)}hideTestArea(){document.getElementById("test-area-modal")?.classList.remove("active")}async setupTestAreaExpander(e){const{SnippetTrie:t}=await x(async()=>{const{SnippetTrie:d}=await import("../../chunks/trie.js");return{SnippetTrie:d}},[]),{TextReplacer:n}=await x(async()=>{const{TextReplacer:d}=await import("../../chunks/replacer.js");return{TextReplacer:d}},__vite__mapDeps([0,1])),{shouldTriggerMatch:s}=await x(async()=>{const{shouldTriggerMatch:d}=await import("../../chunks/word-boundaries.js");return{shouldTriggerMatch:d}},[]),o=await m.getSnippets(),a=new t(!1);a.rebuild(o);let i=null;const l=async()=>{const d=e.selectionStart??e.value.length,u=e.value.substring(0,d);if(!u)return;const p=a.findMatch(u);if(!p)return;const{snippet:r}=p,h=r.caseSensitive?r.trigger:r.trigger.toLowerCase();if(!(r.caseSensitive?u:u.toLowerCase()).endsWith(h))return;const v=u.substring(u.length-h.length),w=u.substring(0,u.length-h.length);if(!s(w,h,"",r.triggerMode))return;await n.replace(e,r.trigger,r.expansion,r.caseTransform,v)&&m.incrementUsage(r.id).catch(y=>{console.error("TextBlitz: Failed to update usage stats",y)})},c=()=>{i&&clearTimeout(i),i=window.setTimeout(()=>{l()},10)};e.addEventListener("input",c)}switchFolder(e){this.currentFolder=e,document.querySelectorAll(".folder-item").forEach(n=>{n.classList.remove("active")}),document.querySelector(`[data-folder="${e}"]`)?.classList.add("active");const t=document.getElementById("content-title");if(t)switch(e){case"all":t.textContent="All Snippets";break;case"work":t.textContent="Work Snippets";break;case"personal":t.textContent="Personal Snippets";break;default:t.textContent="Snippets"}this.loadSnippets()}async updateFolderCounts(){const e=await m.getSnippets(),t=Object.values(e),n=await m.getSettings(),s=t.length,o=t.filter(p=>p.folder==="work").length,a=t.filter(p=>p.folder==="personal").length,i=document.getElementById("count-all"),l=document.getElementById("count-work"),c=document.getElementById("count-personal");i&&(i.textContent=s.toString()),l&&(l.textContent=o.toString()),c&&(c.textContent=a.toString());const d=document.getElementById("snippet-counter");d&&(d.textContent=`${s}/∞`),(n.customFolders||[]).forEach(p=>{const r=t.filter(f=>f.folder===p.id).length,h=document.getElementById(`count-${p.id}`);h&&(h.textContent=r.toString())})}async renderFolders(){const e=document.getElementById("folder-list");if(!e)return;const n=(await m.getSettings()).customFolders||[];let s=`
      <div class="folder-item ${this.currentFolder==="all"?"active":""}" data-folder="all">
        <span class="folder-icon">📁</span>
        <span>All Snippets</span>
        <span class="folder-count" id="count-all">0</span>
      </div>
      <div class="folder-item ${this.currentFolder==="work"?"active":""}" data-folder="work">
        <span class="folder-icon">💼</span>
        <span class="folder-name">Work</span>
        <span class="folder-count" id="count-work">0</span>
        <button class="folder-edit-btn" data-folder-id="work" title="Rename folder">✏️</button>
        <button class="folder-delete-btn" data-folder-id="work" title="Delete folder">×</button>
      </div>
      <div class="folder-item ${this.currentFolder==="personal"?"active":""}" data-folder="personal">
        <span class="folder-icon">👤</span>
        <span class="folder-name">Personal</span>
        <span class="folder-count" id="count-personal">0</span>
        <button class="folder-edit-btn" data-folder-id="personal" title="Rename folder">✏️</button>
        <button class="folder-delete-btn" data-folder-id="personal" title="Delete folder">×</button>
      </div>
    `;n.forEach(o=>{s+=`
        <div class="folder-item ${this.currentFolder===o.id?"active":""}" data-folder="${o.id}">
          <span class="folder-icon">${o.icon}</span>
          <span class="folder-name">${this.escapeHtml(o.name)}</span>
          <span class="folder-count" id="count-${o.id}">0</span>
          <button class="folder-edit-btn" data-folder-id="${o.id}" title="Rename folder">✏️</button>
          <button class="folder-delete-btn" data-folder-id="${o.id}" title="Delete folder">×</button>
        </div>
      `}),e.innerHTML=s,document.querySelectorAll(".folder-item").forEach(o=>{o.addEventListener("click",i=>{const l=i.target;if(l.classList.contains("folder-delete-btn")||l.classList.contains("folder-edit-btn"))return;const c=i.currentTarget.getAttribute("data-folder");c&&this.switchFolder(c)});const a=o.getAttribute("data-folder");a&&a!=="all"&&o.addEventListener("dblclick",i=>{i.stopPropagation(),this.showFolderModal(a)})}),document.querySelectorAll(".folder-edit-btn").forEach(o=>{o.addEventListener("click",a=>{a.stopPropagation();const i=a.currentTarget.getAttribute("data-folder-id");i&&this.showFolderModal(i)})}),document.querySelectorAll(".folder-delete-btn").forEach(o=>{o.addEventListener("click",a=>{a.stopPropagation();const i=a.currentTarget.getAttribute("data-folder-id");i&&this.deleteFolder(i)})}),await this.updateFolderCounts()}async showModal(e){const t=document.getElementById("snippet-modal"),n=document.getElementById("modal-title"),s=document.getElementById("snippet-label"),o=document.getElementById("snippet-trigger"),a=document.getElementById("snippet-expansion"),i=document.getElementById("snippet-folder"),l=document.getElementById("snippet-trigger-mode"),c=document.getElementById("snippet-case-transform"),d=document.getElementById("snippet-enabled"),u=document.getElementById("snippet-case-sensitive"),p=document.getElementById("snippet-type"),r=document.getElementById("snippet-llm-provider"),h=document.getElementById("snippet-llm-prompt"),f=document.getElementById("snippet-fallback");if(await this.updateFolderDropdown(),!this.wysiwygEditor)try{this.wysiwygEditor=new G("wysiwyg-container",""),this.wysiwygEditor.onChange(v=>{a.value=v})}catch(v){console.error("Failed to initialize WYSIWYG editor:",v)}if(e)this.currentEditId=e.id,n&&(n.textContent="Edit Snippet"),s.value=e.label,o.value=e.trigger,a.value=e.expansion,this.wysiwygEditor&&this.wysiwygEditor.setContent(e.expansion),i.value=e.folder||"",l.value=e.triggerMode,c.value=e.caseTransform||"none",d.checked=e.enabled,u.checked=e.caseSensitive,p.value=e.type||"static",r.value=e.llmProvider||"groq",h.value=e.llmPrompt||"",f.value=e.fallbackText||"";else{this.currentEditId=null,n&&(n.textContent="New Snippet"),s.value="",o.value="",a.value="",this.wysiwygEditor&&this.wysiwygEditor.setContent("");const w=(await m.getSettings()).lastUsedFolder||(this.currentFolder==="all"?"":this.currentFolder);i.value=w,l.value="word",c.value="none",d.checked=!0,u.checked=!1,p.value="static",r.value="groq",h.value="",f.value=""}this.toggleSnippetTypeFields(),t?.classList.add("active"),s.focus()}hideModal(){document.getElementById("snippet-modal")?.classList.remove("active"),this.currentEditId=null}async saveSnippet(){const e=document.getElementById("snippet-label"),t=document.getElementById("snippet-trigger"),n=document.getElementById("snippet-expansion"),s=document.getElementById("snippet-folder"),o=document.getElementById("snippet-trigger-mode"),a=document.getElementById("snippet-case-transform"),i=document.getElementById("snippet-enabled"),l=document.getElementById("snippet-case-sensitive"),c=document.getElementById("snippet-type"),d=document.getElementById("snippet-llm-provider"),u=document.getElementById("snippet-llm-prompt"),p=document.getElementById("snippet-fallback"),r=e.value.trim(),h=t.value.trim(),f=c.value;if(!r){alert("Please enter a label for this snippet"),e.focus();return}if(!h){alert("Please enter a trigger for this snippet"),t.focus();return}let v="",w,g,y;if(f==="dynamic"){if(w=u.value.trim(),!w){alert("Please enter an AI prompt for this dynamic snippet"),u.focus();return}g=d.value,y=p.value.trim()||void 0,v=w}else if(v=n.value.trim(),!v){alert("Please enter an expansion for this snippet"),n.focus();return}const T={id:this.currentEditId||`snippet-${Date.now()}`,label:r,trigger:h,expansion:v,folder:s.value||void 0,triggerMode:o.value,caseTransform:a.value,caseSensitive:l.checked,enabled:i.checked,type:f,llmProvider:g,llmPrompt:w,fallbackText:y,createdAt:this.currentEditId&&(await m.getSnippet(this.currentEditId))?.createdAt||Date.now(),usageCount:this.currentEditId&&(await m.getSnippet(this.currentEditId))?.usageCount||0,lastUsed:this.currentEditId?(await m.getSnippet(this.currentEditId))?.lastUsed:void 0};if(await m.saveSnippet(T),!this.currentEditId){const k=await m.getSettings();k.lastUsedFolder=s.value||void 0,await m.saveSettings(k)}await this.loadSnippets(),await this.updateFolderCounts(),this.hideModal()}async editSnippet(e){window.location.href=`../snippet-editor/snippet-editor.html?id=${e}`}async duplicateSnippet(e){const t=await m.getSnippet(e);if(!t)return;const n={...t,id:`snippet-${Date.now()}`,label:`${t.label} (copy)`,trigger:`${t.trigger}copy`,createdAt:Date.now(),usageCount:0,lastUsed:void 0};await m.saveSnippet(n),await this.loadSnippets(),await this.updateFolderCounts()}async deleteSnippet(e){const t=await m.getSnippet(e);t&&confirm(`Are you sure you want to delete "${t.label}"?`)&&(await m.deleteSnippet(e),await this.loadSnippets(),await this.updateFolderCounts())}async exportData(){if(this.currentFolder!=="all")await this.exportFolder(this.currentFolder);else{const e=await m.exportData(),t=new Blob([JSON.stringify(e,null,2)],{type:"application/json"}),n=URL.createObjectURL(t),s=document.createElement("a");s.href=n,s.download=`textblitz-export-${Date.now()}.json`,s.click(),URL.revokeObjectURL(n)}}async exportFolder(e){const t=await m.getSnippets(),n=Object.values(t).filter(d=>d.folder===e);if(n.length===0){alert("This folder has no snippets to export");return}const s=await m.getSettings();let o=e;if(e==="work")o="Work";else if(e==="personal")o="Personal";else{const d=s.customFolders?.find(u=>u.id===e);d&&(o=d.name)}const a={snippets:n.reduce((d,u)=>(d[u.id]=u,d),{}),settings:{...s},version:"1.0",exportedAt:Date.now(),folderName:o},i=new Blob([JSON.stringify(a,null,2)],{type:"application/json"}),l=URL.createObjectURL(i),c=document.createElement("a");c.href=l,c.download=`textblitz-${o.toLowerCase()}-${Date.now()}.json`,c.click(),URL.revokeObjectURL(l)}async importData(e){try{const t=await e.text(),n=JSON.parse(t);await m.importData(n),await this.loadSnippets(),await this.loadSettings(),await this.updateFolderCounts(),alert("Data imported successfully!")}catch(t){alert("Failed to import data. Please check the file format."),console.error(t)}}async updateFolderDropdown(){const e=document.getElementById("snippet-folder");if(!e)return;const n=(await m.getSettings()).customFolders||[];let s='<option value="">No Folder</option>';s+='<option value="work">💼 Work</option>',s+='<option value="personal">👤 Personal</option>',n.forEach(o=>{s+=`<option value="${o.id}">${o.icon} ${this.escapeHtml(o.name)}</option>`}),e.innerHTML=s}showFolderModal(e){const t=document.getElementById("folder-modal"),n=document.getElementById("folder-modal-title"),s=document.getElementById("folder-name"),o=document.getElementById("folder-icon");e?(this.currentEditFolderId=e,n&&(n.textContent="Edit Folder"),e==="work"?(s.value="Work",o.value="💼"):e==="personal"?(s.value="Personal",o.value="👤"):m.getSettings().then(a=>{const i=a.customFolders?.find(l=>l.id===e);i&&(s.value=i.name,o.value=i.icon)})):(this.currentEditFolderId=null,n&&(n.textContent="New Folder"),s.value="",o.value="📂"),t?.classList.add("active"),s.focus()}hideFolderModal(){document.getElementById("folder-modal")?.classList.remove("active"),this.currentEditFolderId=null}async saveFolder(){const e=document.getElementById("folder-name"),t=document.getElementById("folder-icon"),n=e.value.trim(),s=t.value.trim()||"📂";if(!n){alert("Please enter a folder name"),e.focus();return}const o=await m.getSettings(),a=o.customFolders||[];if(this.currentEditFolderId)if(this.currentEditFolderId==="work"||this.currentEditFolderId==="personal"){const i={id:this.currentEditFolderId,name:n,icon:s,order:a.length};a.push(i)}else{const i=a.find(l=>l.id===this.currentEditFolderId);i&&(i.name=n,i.icon=s)}else{const i={id:`folder-${Date.now()}`,name:n,icon:s,order:a.length};a.push(i)}o.customFolders=a,await m.saveSettings(o),await this.renderFolders(),await this.updateFolderDropdown(),this.hideFolderModal()}async deleteFolder(e){const t=await m.getSettings();let n,s=!1;if(e==="work")n="Work";else if(e==="personal")n="Personal";else{const l=t.customFolders?.find(c=>c.id===e);if(!l)return;n=l.name,s=!0}const o=await m.getSnippets(),a=Object.values(o).filter(l=>l.folder===e).length,i=a>0?`Delete "${n}"? ${a} snippet(s) will be moved to "No Folder".`:`Delete "${n}"?`;if(confirm(i)){if(a>0)for(const l of Object.values(o))l.folder===e&&(l.folder=void 0,await m.saveSnippet(l));s&&(t.customFolders=t.customFolders?.filter(l=>l.id!==e),await m.saveSettings(t)),this.currentFolder===e&&this.switchFolder("all"),await this.renderFolders(),await this.updateFolderDropdown(),await this.loadSnippets()}}escapeHtml(e){const t=document.createElement("div");return t.textContent=e,t.innerHTML}toggleSnippetTypeFields(){const e=document.getElementById("snippet-type"),t=document.getElementById("static-fields"),n=document.getElementById("dynamic-fields");e?.value==="dynamic"?(t.style.display="none",n.style.display="block"):(t.style.display="block",n.style.display="none")}async showLLMSettings(){const e=document.getElementById("llm-settings-modal"),t=document.getElementById("llm-default-provider"),n=document.getElementById("llm-groq-key"),s=document.getElementById("llm-groq-model"),o=document.getElementById("llm-groq-tier"),a=document.getElementById("llm-openai-key"),i=document.getElementById("llm-openai-model"),l=document.getElementById("llm-openai-tier"),c=document.getElementById("llm-anthropic-key"),d=document.getElementById("llm-anthropic-model"),u=document.getElementById("llm-anthropic-tier"),p=document.getElementById("llm-gemini-key"),r=document.getElementById("llm-gemini-model"),h=document.getElementById("llm-gemini-tier"),f=document.getElementById("llm-system-prompt"),v=document.getElementById("llm-alert-threshold"),w=document.getElementById("llm-monthly-budget"),g=await m.getSettings();t.value=g.llmDefaultProvider,n.value=g.llmKeys.groq||"",s.value=g.llmModels.groq||"llama-3.3-70b-versatile",o.value=g.llmTiers.groq||"free",a.value=g.llmKeys.openai||"",i.value=g.llmModels.openai||"gpt-4o-mini",l.value=g.llmTiers.openai||"tier1",c.value=g.llmKeys.anthropic||"",d.value=g.llmModels.anthropic||"claude-sonnet-4-20250514",u.value=g.llmTiers.anthropic||"tier1",p.value=g.llmKeys.gemini||"",r.value=g.llmModels.gemini||"gemini-2.0-flash-exp",h.value=g.llmTiers.gemini||"free",f.value=g.llmSystemPrompt||"",v.value=g.llmUsageAlert?.toString()||"80",w.value=g.llmMonthlyBudget?.toString()||"";const y=async()=>{g.llmDefaultProvider=t.value,g.llmKeys.groq=n.value.trim()||void 0,g.llmKeys.openai=a.value.trim()||void 0,g.llmKeys.anthropic=c.value.trim()||void 0,g.llmKeys.gemini=p.value.trim()||void 0,g.llmModels.groq=s.value,g.llmModels.openai=i.value,g.llmModels.anthropic=d.value,g.llmModels.gemini=r.value,g.llmTiers.groq=o.value,g.llmTiers.openai=l.value,g.llmTiers.anthropic=u.value,g.llmTiers.gemini=h.value,g.llmSystemPrompt=f.value.trim()||void 0,g.llmUsageAlert=parseInt(v.value)||80,g.llmMonthlyBudget=w.value?parseFloat(w.value):void 0,await m.saveSettings(g)};t.addEventListener("change",y),n.addEventListener("change",y),s.addEventListener("change",y),o.addEventListener("change",y),a.addEventListener("change",y),i.addEventListener("change",y),l.addEventListener("change",y),c.addEventListener("change",y),d.addEventListener("change",y),u.addEventListener("change",y),p.addEventListener("change",y),r.addEventListener("change",y),h.addEventListener("change",y),f.addEventListener("change",y),v.addEventListener("change",y),w.addEventListener("change",y),document.getElementById("reset-system-prompt-btn")?.addEventListener("click",async()=>{const{DEFAULT_LLM_SYSTEM_PROMPT:S}=await x(async()=>{const{DEFAULT_LLM_SYSTEM_PROMPT:A}=await import("../../chunks/storage.js").then(D=>D.t);return{DEFAULT_LLM_SYSTEM_PROMPT:A}},[]);f.value=S,await y()});const k=document.getElementById("advanced-settings-toggle"),C=document.getElementById("advanced-settings-content"),P=document.getElementById("advanced-settings-icon");k?.addEventListener("click",()=>{const S=C.style.display==="none";C.style.display=S?"block":"none",P.textContent=S?"▼":"▶"}),document.getElementById("reset-all-stats-btn")?.addEventListener("click",async()=>{confirm("Reset all usage statistics? This cannot be undone.")&&(await E.getUsageTracker().resetAllStats(),await this.loadUsageStats())}),this.llmSettingsSaveCallback=y,await this.loadUsageStats(),e?.classList.add("active")}async hideLLMSettings(){this.llmSettingsSaveCallback&&await this.llmSettingsSaveCallback(),document.getElementById("llm-settings-modal")?.classList.remove("active")}async showGenerateSnippet(){const e=document.getElementById("generate-snippet-modal"),t=document.getElementById("generate-description"),n=document.getElementById("generate-status");t.value="",n.style.display="none",e?.classList.add("active")}hideGenerateSnippet(){document.getElementById("generate-snippet-modal")?.classList.remove("active")}async generateSnippet(){const e=document.getElementById("generate-description"),t=document.getElementById("generate-provider"),n=document.getElementById("generate-status"),s=document.getElementById("generate-btn"),o=e.value.trim();if(!o){alert("Please describe what you want the snippet to do");return}const a=await m.getSettings(),i=t.value;if(!(i==="groq"?a.llmKeys.groq:a.llmKeys.anthropic)){alert(`Please add your ${i==="groq"?"Groq":"Anthropic"} API key in LLM Settings first`);return}i==="groq"&&a.llmKeys.groq?E.setProvider("groq",a.llmKeys.groq,a.llmTimeout):i==="anthropic"&&a.llmKeys.anthropic&&E.setProvider("anthropic",a.llmKeys.anthropic,a.llmTimeout),s.disabled=!0,n.style.display="block",n.style.background="#f0f9ff",n.style.borderLeft="3px solid #6366f1",n.innerHTML="⏳ Generating snippet...";try{const c=`You are a snippet generator for a text expansion tool. Generate a snippet based on this description:

"${o}"

Return ONLY valid JSON in this exact format:
{
  "label": "Friendly name for the snippet",
  "trigger": "shortcut text to type (lowercase, no spaces, 2-5 chars)",
  "expansion": "The text that will replace the trigger. Use {date}, {time}, {clipboard}, {cursor} for dynamic content."
}

Examples:
- Description: "email signature with my name John and today's date"
  Response: {"label":"Email Signature","trigger":"sig","expansion":"Best,\\nJohn Smith\\n{date}"}

- Description: "insert current time in 12h format"
  Response: {"label":"Current Time","trigger":"now","expansion":"{time:12h}"}

Return ONLY the JSON, no explanation.`,d=await E.complete(i,{prompt:c,maxTokens:200,temperature:.3});let u;try{u=JSON.parse(d.text)}catch{const r=d.text.match(/\{[\s\S]*\}/);if(r)u=JSON.parse(r[0]);else throw new Error("Could not parse LLM response as JSON")}if(!u.label||!u.trigger||!u.expansion)throw new Error("Generated snippet missing required fields");n.style.background="#f0fdf4",n.style.borderLeft="3px solid #22c55e",n.innerHTML="✅ Snippet generated! Opening editor...",setTimeout(()=>{this.hideGenerateSnippet();const p={label:u.label,trigger:u.trigger,expansion:u.expansion};this.showModal(p)},500)}catch(c){console.error("Snippet generation failed:",c),n.style.background="#fef2f2",n.style.borderLeft="3px solid #ef4444",n.innerHTML=`❌ Failed: ${c instanceof Error?c.message:"Unknown error"}`}finally{s.disabled=!1}}async loadUsageStats(){const e=document.getElementById("llm-usage-stats");if(e)try{const n=(await chrome.storage.local.get("llmUsage")).llmUsage,s=await m.getSettings(),o=s.llmUsageAlert||80;if(!n||!n.groq&&!n.anthropic&&!n.openai&&!n.gemini){e.innerHTML='<div style="font-size: 13px; color: #6b7280;">No usage data yet. Create a dynamic snippet to get started!</div>';return}const a=E.getUsageTracker();let i='<div style="display: flex; flex-direction: column; gap: 16px;">';const l=async(c,d)=>{const u=n[c];if(!u||u.requests===0)return"";const r=(await a.getRateLimit(c)).requestsPerMinute,h=u.requestsThisMinute,f=h/r*100;let v="#10b981",w="✅";f>=100?(v="#ef4444",w="🔴"):f>=o&&(v="#f59e0b",w="⚠️");const g=u.model||"N/A",y=s.llmTiers[c]||"";return`
          <div style="border-left: 3px solid ${v}; padding-left: 12px;">
            <div style="display: flex; align-items: center; gap: 8px; font-weight: 500; margin-bottom: 8px;">
              <span>${w}</span>
              <span>${d}</span>
              <span style="font-size: 12px; color: #6b7280; font-weight: normal;">(${g}${y?", "+y:""})</span>
            </div>
            <div style="display: grid; grid-template-columns: 1fr 1fr; gap: 8px; font-size: 13px; color: #6b7280;">
              <div>Requests: ${u.requests}</div>
              <div>Tokens: ${u.tokensTotal.toLocaleString()}</div>
              <div style="color: ${v};">This minute: ${h}/${r}</div>
              <div>Cost: $${u.estimatedCost.toFixed(4)}</div>
            </div>
            ${f>=o?`
              <div style="margin-top: 8px; padding: 8px; background: ${f>=100?"#fef2f2":"#fef3c7"}; border-radius: 4px; font-size: 12px; color: ${f>=100?"#991b1b":"#92400e"};">
                ${f>=100?"Rate limit reached!":`Approaching rate limit (${f.toFixed(0)}%)`}
              </div>
            `:""}
          </div>
        `};i+=await l("groq","Groq"),i+=await l("openai","OpenAI"),i+=await l("anthropic","Anthropic"),i+=await l("gemini","Gemini"),i+="</div>",e.innerHTML=i}catch(t){console.error("Failed to load usage stats:",t)}}async showSnippetPacks(){const e=document.getElementById("snippet-packs-modal"),t=document.getElementById("packs-list");if(!t)return;let n="";for(const s of B)n+=`
        <div style="border: 1px solid #e5e7eb; border-radius: 8px; padding: 16px; margin-bottom: 16px; cursor: pointer; transition: all 0.2s;"
             class="pack-card"
             data-pack-id="${this.escapeHtml(s.name)}">
          <div style="display: flex; align-items: start; gap: 16px;">
            <div style="font-size: 36px;">${s.icon}</div>
            <div style="flex: 1;">
              <div style="font-weight: 500; font-size: 16px; margin-bottom: 4px;">${this.escapeHtml(s.name)}</div>
              <div style="font-size: 13px; color: #6b7280; margin-bottom: 8px;">${this.escapeHtml(s.description)}</div>
              <div style="display: flex; align-items: center; gap: 12px; font-size: 12px; color: #6b7280;">
                <span>📝 ${s.snippets.length} snippets</span>
                ${s.author?`<span>👤 ${this.escapeHtml(s.author)}</span>`:""}
                ${s.tags?`<span>🏷️ ${s.tags.join(", ")}</span>`:""}
              </div>
            </div>
            <button class="btn btn-primary" style="padding: 8px 16px;">
              Preview & Install
            </button>
          </div>
        </div>
      `;t.innerHTML=n,document.querySelectorAll(".pack-card").forEach(s=>{s.addEventListener("click",o=>{const a=o.currentTarget.getAttribute("data-pack-id"),i=B.find(l=>l.name===a);i&&this.showPackPreview(i)})}),e?.classList.add("active")}hideSnippetPacks(){document.getElementById("snippet-packs-modal")?.classList.remove("active")}async showPackPreview(e){this.currentPack=e;const t=document.getElementById("pack-preview-modal"),n=document.getElementById("pack-preview-title"),s=document.getElementById("pack-metadata"),o=document.getElementById("pack-snippets-preview");n&&(n.textContent=`${e.icon} ${e.name}`),s&&(s.innerHTML=`
        <div style="font-size: 14px; color: #6b7280; margin-bottom: 8px;">
          ${this.escapeHtml(e.description)}
        </div>
        <div style="display: flex; align-items: center; gap: 16px; font-size: 13px; color: #6b7280;">
          <span>📝 ${e.snippets.length} snippets</span>
          ${e.author?`<span>👤 ${this.escapeHtml(e.author)}</span>`:""}
          ${e.version?`<span>📌 v${e.version}</span>`:""}
        </div>
        ${e.tags&&e.tags.length>0?`
          <div style="display: flex; gap: 6px; margin-top: 8px;">
            ${e.tags.map(a=>`
              <span style="background: #f3f4f6; color: #374151; padding: 2px 8px; border-radius: 4px; font-size: 12px;">
                ${this.escapeHtml(a)}
              </span>
            `).join("")}
          </div>
        `:""}
      `),o&&(o.innerHTML=e.snippets.map(a=>`
        <div style="border: 1px solid var(--border-color); border-radius: 6px; padding: 12px; background: var(--bg-card);">
          <div style="display: flex; align-items: center; justify-content: space-between; margin-bottom: 6px;">
            <span style="font-weight: 500; font-size: 14px; color: var(--text-primary);">${this.escapeHtml(a.label)}</span>
            <span style="background: rgba(99, 102, 241, 0.1); color: var(--color-primary); padding: 2px 8px; border-radius: 4px; font-size: 12px; font-family: monospace;">
              ${this.escapeHtml(a.trigger)}
            </span>
          </div>
          <div style="font-size: 13px; color: var(--text-secondary); font-family: monospace; white-space: pre-wrap; background: var(--bg-input); padding: 8px; border-radius: 4px; border: 1px solid var(--border-color); max-height: 100px; overflow-y: auto;">
            ${this.escapeHtml(a.expansion)}
          </div>
        </div>
      `).join("")),this.hideSnippetPacks(),t?.classList.add("active")}hidePackPreview(){document.getElementById("pack-preview-modal")?.classList.remove("active"),this.currentPack=null}async installPack(){if(!this.currentPack)return;const e=document.getElementById("pack-conflict-mode").value,t=document.getElementById("pack-create-folder").checked;try{const n=await K.installPack(this.currentPack,{mode:"all",conflictResolution:e,createFolder:t}),s=`Successfully installed "${this.currentPack.name}"!

Imported: ${n.installedCount} snippets
`+(n.skippedCount>0?`Skipped: ${n.skippedCount} (already exists)
`:"");alert(s),this.hidePackPreview(),await this.loadSnippets(),await this.renderFolders(),await this.updateFolderCounts()}catch(n){console.error("Pack installation failed:",n),alert(`Failed to install pack: ${n instanceof Error?n.message:"Unknown error"}`)}}}new W;
